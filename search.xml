<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo博客搭建（8）：替换使用matery主题及详细配置</title>
      <link href="/2020/06/11/hexo-bo-ke-da-jian-8-ti-huan-shi-yong-matery-zhu-ti-ji-xiang-xi-pei-zhi/"/>
      <url>/2020/06/11/hexo-bo-ke-da-jian-8-ti-huan-shi-yong-matery-zhu-ti-ji-xiang-xi-pei-zhi/</url>
      
        <content type="html"><![CDATA[<p>在 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">官网</a> 或 这个网站 <a href="https://easyhexo.com/2-Theme-use-and-config/" target="_blank" rel="noopener">Easy Hexo</a> 选择自己喜欢的主题。<br>经过对比，我选择了matery主题。喜欢他的MD风格设计和响应式设计，它的首页banner轮播、文章配图、时间轴的归档页、支持Valine评论系统等特性，也满足自己的需求。</p><a id="more"></a><h1 id="特性："><a href="#特性：" class="headerlink" title="特性："></a>特性：</h1><ul><li>简单漂亮，文章内容美观易读</li><li><code>Material Design</code> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天<code>动态切换 Banner 图片</code></li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li><code>时间轴式的归档页</code></li><li>词云的标签页和雷达图的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 MathJax</li><li>TOC 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li>Gitalk、Gitment、<code>Valine</code> 和 Disqus 评论模块（推荐使用 Gitalk）</li><li>集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情。</li><li>支持 DaoVoice、Tidio 在线聊天功能。</li></ul><h1 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h1><p>cd 到 themes 文件夹下，输入以下命令行，clone下载主题文件到本地的 <code>~blog/themes</code> 文件夹中:</p><pre class="line-numbers language-jsx"><code class="language-jsx">git clone https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>blinkfox<span class="token operator">/</span>hexo<span class="token operator">-</span>theme<span class="token operator">-</span>matery<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h1><p>下载完成后，查看本地文件夹名称为：<code>hexo-theme-matery</code>，打开主题文件夹下的 <code>_config.yml</code> 文件，修改 <code>theme</code> 的值为文件夹名称。</p><ul><li>打开博客本地文件夹的配置文件 <code>_config.yml</code>， 找到<code>theme</code>字段，并将其值从默认的 <code>landscape</code> 更改为 <code>hexo-theme-matery</code>。</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">theme<span class="token punctuation">:</span> hexo<span class="token operator">-</span>theme<span class="token operator">-</span>matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注：Hexo中有两份主要的配置文件，其名称都是<code>_config.yml</code>。<br>一份位于<code>博客根目录里</code>，包含Hexo本身的配置。<br>另一份位于<code>主题目录里</code>，包含主题相关的一些配置。<br>为描述方便，以下说明中将前者称为 <code>站点配置文件</code>，后者称为<code>主题配置文件</code>。</p></blockquote><h1 id="修改url-的值"><a href="#修改url-的值" class="headerlink" title="修改url 的值"></a>修改url 的值</h1><p>修改 <code>主题配置文件</code> 的 <code>url</code> 的值为自己的网站主 <code>URL</code> （如： <a href="http://xxx.github.io" target="_blank" rel="noopener">http://xxx.github.io</a> ）。</p><h2 id="首页-banner-中的右侧第二个按钮的配置"><a href="#首页-banner-中的右侧第二个按钮的配置" class="headerlink" title="首页 banner 中的右侧第二个按钮的配置"></a>首页 banner 中的右侧第二个按钮的配置</h2><pre class="line-numbers language-jsx"><code class="language-jsx">indexbtn<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>  name<span class="token punctuation">:</span> Github  icon<span class="token punctuation">:</span> fab fa<span class="token operator">-</span>github<span class="token operator">-</span>alt  url<span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token regex">/Pamarus/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="header-中的-fork-me-on-github-的图标"><a href="#header-中的-fork-me-on-github-的图标" class="headerlink" title="header 中的 fork me on github 的图标"></a>header 中的 fork me on github 的图标</h2><p>配置是否在 <code>header</code> 中显示 <code>fork me on github</code> 的图标，默认为true，你可以修改为你的仓库地址。<br>我保留为默认项，可以快速跳转主题的GitHub页。</p><pre class="line-numbers language-jsx"><code class="language-jsx">githubLink<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>  url<span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>blinkfox<span class="token operator">/</span>hexo<span class="token operator">-</span>theme<span class="token operator">-</span>matery  title<span class="token punctuation">:</span> Fork Me<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="修改分页文章条数"><a href="#修改分页文章条数" class="headerlink" title="修改分页文章条数"></a>修改分页文章条数</h1><p>打开站点配置文件，找到以下配置项：</p><pre class="line-numbers language-jsx"><code class="language-jsx">index_generator<span class="token punctuation">:</span>  path<span class="token punctuation">:</span> <span class="token string">''</span>  per_page<span class="token punctuation">:</span> <span class="token number">12</span>  order_by<span class="token punctuation">:</span> <span class="token operator">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-jsx"><code class="language-jsx">per_page<span class="token punctuation">:</span> <span class="token number">12</span>pagination_dir<span class="token punctuation">:</span> page<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>建议修改两个 <code>per_page</code> 的分页条数值为 6 的倍数，如： 12 、 18 等，这样响应式布局在各个屏幕下适配得更好，文章列表能较好的显示。</p><h1 id="修改目录显示效果"><a href="#修改目录显示效果" class="headerlink" title="修改目录显示效果"></a>修改目录显示效果</h1><p>在 <code>主题配置文件</code> 中找到一下代码块，配置是否激活文章 TOC 功能，并配置TOC支持选中哪些标题类型，以及默认展开几层，这些是全局配置。另外可以在某篇文章的 Front-matter 中再加上<code>toc: false</code>，使该篇文章关闭TOC目录功能</p><pre class="line-numbers language-jsx"><code class="language-jsx">toc<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>  heading<span class="token punctuation">:</span> h1<span class="token punctuation">,</span> h2<span class="token punctuation">,</span> h3<span class="token punctuation">,</span> h4<span class="token punctuation">,</span> h5<span class="token punctuation">,</span> h6  collapseDepth<span class="token punctuation">:</span> <span class="token number">1</span> # 目录默认展开层级  showToggleBtn<span class="token punctuation">:</span> <span class="token boolean">true</span> # 是否显示切换TOC目录展开收缩的按钮<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="文章-Front-matter"><a href="#文章-Front-matter" class="headerlink" title="文章 Front-matter"></a>文章 Front-matter</h1><h2 id="Front-matter属性介绍"><a href="#Front-matter属性介绍" class="headerlink" title="Front-matter属性介绍"></a>Front-matter属性介绍</h2><p>选项中的所有内容均为非必填的。但我仍然建议至少填写 title 和 date 的值。</p><ul><li>title<ul><li>Markdown 的文件标题。文章标题，强烈建议填写此选项</li></ul></li><li>date<ul><li>文件创建时的日期时间。发布时间，强烈建议填写此选项，且最好保证全局唯一</li></ul></li><li>author<ul><li>主题配置文件中的 author，文章作者</li></ul></li><li>img<ul><li>featureImages 中的某个值</li><li>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <a href="http://xxx.com/xxx.jpg" target="_blank" rel="noopener">http://xxx.com/xxx.jpg</a></li></ul></li><li>top<ul><li>推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</li></ul></li><li>cover<ul><li>v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</li></ul></li><li>coverImg<ul><li>v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</li></ul></li><li>password<ul><li>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</li></ul></li><li>toc<ul><li>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</li></ul></li><li>mathjax<ul><li>是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</li></ul></li><li>summary<ul><li>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</li></ul></li><li>categories<ul><li>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</li></ul></li><li>tags<ul><li>文章标签，一篇文章可以多个标签</li></ul></li><li>keywords<ul><li>文章关键字，SEO 时需要</li></ul></li><li>reprintPolicy<ul><li>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</li></ul></li></ul><h2 id="修改默认模板"><a href="#修改默认模板" class="headerlink" title="修改默认模板"></a>修改默认模板</h2><p>为了新建文章方便，建议将博客文件夹中的 <code>/scaffolds/post.md</code> 修改为如下代码，这样新建文章后不用自己补充了，修改信息就行。</p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">04</span> <span class="token number">21</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">45</span>author<span class="token punctuation">:</span> categories<span class="token punctuation">:</span> tags<span class="token punctuation">:</span> <span class="token punctuation">[</span>标签<span class="token number">1</span><span class="token punctuation">,</span>标签<span class="token number">2</span><span class="token punctuation">]</span>keywords<span class="token punctuation">:</span> img<span class="token punctuation">:</span> top<span class="token punctuation">:</span> <span class="token boolean">false</span>cover<span class="token punctuation">:</span> <span class="token boolean">false</span>coverImg<span class="token punctuation">:</span> password<span class="token punctuation">:</span> toc<span class="token punctuation">:</span> <span class="token boolean">true</span>mathjax<span class="token punctuation">:</span> <span class="token boolean">true</span>summary<span class="token punctuation">:</span> comments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h1><p>1.菜单导航名称可以是中文也可以是英文(如：Index或主页)<br>2.图标icon 可以在Font Awesome 中查找</p><p>在 <code>站点配置文件</code> 中找到以下配置项</p><pre class="line-numbers language-jsx"><code class="language-jsx">menu<span class="token punctuation">:</span>  Index<span class="token punctuation">:</span>    url<span class="token punctuation">:</span> <span class="token operator">/</span>    icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>home  Tags<span class="token punctuation">:</span>    url<span class="token punctuation">:</span> <span class="token operator">/</span>tags    icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>tags  Categories<span class="token punctuation">:</span>    url<span class="token punctuation">:</span> <span class="token operator">/</span>categories    icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>bookmark  Archives<span class="token punctuation">:</span>    url<span class="token punctuation">:</span> <span class="token operator">/</span>archives    icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>archive  About<span class="token punctuation">:</span>    url<span class="token punctuation">:</span> <span class="token operator">/</span>about    icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>user<span class="token operator">-</span>circle  Contact<span class="token punctuation">:</span>    url<span class="token punctuation">:</span> <span class="token operator">/</span>contact    icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>comments  # Friends<span class="token punctuation">:</span>    # url<span class="token punctuation">:</span> <span class="token operator">/</span>friends    # icon<span class="token punctuation">:</span> fas fa<span class="token operator">-</span>address<span class="token operator">-</span>book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>无需启用某菜单，前面加上注释 <code>#</code> 即可。<br>也可以上下移动位置，改变网页上显示的相对位置。<br>如上，启用了Index/Tags/Categories/Aarchives/About/Contact菜单</p><h1 id="新建一级菜单页面"><a href="#新建一级菜单页面" class="headerlink" title="新建一级菜单页面"></a>新建一级菜单页面</h1><h2 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h2><p>categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-jsx"><code class="language-jsx">hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之前NexT主题已经新建分类页，但没有 <code>layout: "categories"</code> ，页面显示有问题，添加<code>layout</code>属性后，显示正常</p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> 分类date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">:</span><span class="token number">50</span>type<span class="token punctuation">:</span> <span class="token string">"categories"</span>layout<span class="token punctuation">:</span> <span class="token string">"categories"</span>comments<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h2><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-jsx"><code class="language-jsx">hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之前NexT主题已经新建标签页，和分类页一样，添加<code>layout</code>属性后，显示正常</p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> 标签date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">54</span><span class="token punctuation">:</span><span class="token number">11</span>type<span class="token punctuation">:</span> <span class="token string">"tags"</span>layout<span class="token punctuation">:</span> <span class="token string">"tags"</span>comments<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h2><h3 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h3><p>about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-jsx"><code class="language-jsx">hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之前NexT主题已经新建关于页，和分类页一样，添加<code>layout</code>属性后，显示正常</p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> 关于date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">:</span><span class="token number">44</span>type<span class="token punctuation">:</span> <span class="token string">"about"</span>layout<span class="token punctuation">:</span> <span class="token string">"about"</span>comments<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><h4 id="配置个人信息"><a href="#配置个人信息" class="headerlink" title="配置个人信息"></a>配置个人信息</h4><p>包括头像、职业和个人介绍。</p><p>在 <code>主题配置文件</code> 中找到如下设置项</p><pre class="line-numbers language-jsx"><code class="language-jsx">profile<span class="token punctuation">:</span>  avatar<span class="token punctuation">:</span> <span class="token operator">/</span>medias<span class="token operator">/</span>avatar<span class="token punctuation">.</span>jpg  career<span class="token punctuation">:</span> UX Designer  introduction<span class="token punctuation">:</span> If you wish to succeed<span class="token punctuation">,</span> you should use persistence <span class="token keyword">as</span> your good friend<span class="token punctuation">,</span> experience <span class="token keyword">as</span> your reference<span class="token punctuation">,</span> prudence <span class="token keyword">as</span> your brother and hope <span class="token keyword">as</span> your sentry<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="其他信息"><a href="#其他信息" class="headerlink" title="其他信息"></a>其他信息</h4><p>包括项目、技能、相册等内容。在 <code>主题配置文件</code> 中找到 <code>myProjects、mySkills、myGallery</code> ，进行相关的配置</p><h2 id="新建留言板-contact-页"><a href="#新建留言板-contact-页" class="headerlink" title="新建留言板 contact 页"></a>新建留言板 contact 页</h2><ul><li>contact 页是用来展示留言板信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> 留言板date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">10</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">39</span><span class="token punctuation">:</span><span class="token number">38</span>type<span class="token punctuation">:</span> <span class="token string">"contact"</span>layout<span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：本留言板功能依赖于第三方评论系统，请激活你的评论系统才有效果。并且在主题配置文件中，第 19 至 21 行的“菜单”配置，取消关于留言板的注释即可。</p></blockquote><h2 id="新建友情连接-friends-页"><a href="#新建友情连接-friends-页" class="headerlink" title="新建友情连接 friends 页"></a>新建友情连接 friends 页</h2><p>暂时关闭了。在主题配置文件中配置以下选项，不想显示的在配置项前面加<code>#</code>号。</p><h2 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h2><p>如果在你的博客 source 目录下还没有 404.md 文件，那么你就需要新建一个</p><pre class="line-numbers language-jsx"><code class="language-jsx">hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"404"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/404.md</code>，至少需要以下内容：</p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> <span class="token number">404</span>date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">10</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">55</span><span class="token punctuation">:</span><span class="token number">14</span>type<span class="token punctuation">:</span> <span class="token string">"404"</span>layout<span class="token punctuation">:</span> <span class="token string">"404"</span>description<span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！稍后重试 :("</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="集成-valine-评论系统"><a href="#集成-valine-评论系统" class="headerlink" title="集成 valine 评论系统"></a>集成 valine 评论系统</h1><p>打开matery主题文件夹内的配置文件<code>_config.yml</code>，找到<code>Valine</code>配置项，设置为<code>true</code>，填入<code>appid</code> 和 <code>appkey</code></p><blockquote><p>关于如何获取 <code>appid</code> 和 <code>appkey</code>，参见文章 <code>Hexo博客搭建（5）：NexT主题-集成valine评论系统</code>，按照步骤操作即可。</p></blockquote><pre class="line-numbers language-jsx"><code class="language-jsx">valine<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>  appId<span class="token punctuation">:</span>  appKey<span class="token punctuation">:</span>  notify<span class="token punctuation">:</span> <span class="token boolean">false</span>  verify<span class="token punctuation">:</span> <span class="token boolean">false</span>  visitor<span class="token punctuation">:</span> <span class="token boolean">true</span>  avatar<span class="token punctuation">:</span> <span class="token string">'mm'</span> # Gravatar style <span class="token punctuation">:</span> mm<span class="token operator">/</span>identicon<span class="token operator">/</span>monsterid<span class="token operator">/</span>wavatar<span class="token operator">/</span>retro<span class="token operator">/</span>hide  pageSize<span class="token punctuation">:</span> <span class="token number">10</span>  placeholder<span class="token punctuation">:</span> <span class="token string">'just go go'</span> # Comment Box placeholder  background<span class="token punctuation">:</span> <span class="token operator">/</span>medias<span class="token operator">/</span>comment_bg<span class="token punctuation">.</span>png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><p>由于 Hexo 自带的代码高亮主题显示有问题，NexT主题中也不显示。 所以主题中使用到了 <code>hexo-prism-plugin</code> 的 Hexo 插件来做代码高亮。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>安装命令如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">npm i <span class="token operator">-</span>S hexo<span class="token operator">-</span>prism<span class="token operator">-</span>plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>然后，修改 <code>站点配置文件</code> 中 <code>highlight.enable</code> 的值为 false</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">highlight<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">false</span>  line_number<span class="token punctuation">:</span> <span class="token boolean">false</span>  auto_detect<span class="token punctuation">:</span> <span class="token boolean">true</span>  tab_replace<span class="token punctuation">:</span> <span class="token string">''</span>  wrap<span class="token punctuation">:</span> <span class="token boolean">true</span>  hljs<span class="token punctuation">:</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在 <code>highlight</code> 下方新增 <code>prism</code> 插件相关的配置，主要配置如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">prism_plugin<span class="token punctuation">:</span>  mode<span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    # realtime<span class="token operator">/</span>preprocess  theme<span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  line_number<span class="token punctuation">:</span> <span class="token boolean">false</span>    # <span class="token keyword">default</span> <span class="token boolean">false</span>  custom_css<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>若代码块不显示行号，则语言使用 <code>jsx</code> 即可</p></blockquote><h2 id="设置上边距"><a href="#设置上边距" class="headerlink" title="设置上边距"></a>设置上边距</h2><p>代码块和背景色块的上边距比较小，修改 <code>themes/hexo-theme-matery/source/css/matery.css</code> 中 <code>line-numbers</code> 的 <code>padding</code> 值，第一个 <code>1.5rem</code> 修改为 <code>2.5rem</code></p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">/*修改上边距*/</span><span class="token punctuation">.</span>line<span class="token operator">-</span>numbers <span class="token punctuation">{</span>    padding<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">.</span>5rem <span class="token number">1</span><span class="token punctuation">.</span>5rem <span class="token number">1</span><span class="token punctuation">.</span>5rem <span class="token number">3</span><span class="token punctuation">.</span>5rem <span class="token operator">!</span>important<span class="token punctuation">;</span>    margin<span class="token punctuation">:</span> 1rem <span class="token number">0</span> <span class="token operator">!</span>important<span class="token punctuation">;</span>    background<span class="token punctuation">:</span> #<span class="token number">272822</span><span class="token punctuation">;</span>    overflow<span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    border<span class="token operator">-</span>radius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">.</span>35rem<span class="token punctuation">;</span>    tab<span class="token operator">-</span>size<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><p>本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索.</p><ul><li>安装命令如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">npm install hexo<span class="token operator">-</span>generator<span class="token operator">-</span>search <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx"># 搜索插件 hexo<span class="token operator">-</span>generator<span class="token operator">-</span>searchsearch<span class="token punctuation">:</span>  path<span class="token punctuation">:</span> search<span class="token punctuation">.</span>xml  field<span class="token punctuation">:</span> all  content<span class="token punctuation">:</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="中文链接转拼音"><a href="#中文链接转拼音" class="headerlink" title="中文链接转拼音"></a>中文链接转拼音</h1><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 <code>hexo-permalink-pinyin</code> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><ul><li>安装命令如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">npm i hexo<span class="token operator">-</span>permalink<span class="token operator">-</span>pinyin <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在<code>站点配置文件</code>，新增以下的配置项：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx"># 中文链接转拼音插件 hexo<span class="token operator">-</span>permalink<span class="token operator">-</span>pinyinpermalink_pinyin<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>             # Enable <span class="token keyword">this</span> plugin  separator<span class="token punctuation">:</span> <span class="token string">'-'</span>           # Separator <span class="token keyword">of</span> the slug<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token string">'-'</span>  分割符号  exclude<span class="token punctuation">:</span> <span class="token operator">/</span>ignore_post<span class="token operator">/</span>   # Regex <span class="token keyword">for</span> which post should skip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h1><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <code>hexo-wordcount</code> 插件。</p><ul><li>安装命令如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">npm i <span class="token operator">--</span>save hexo<span class="token operator">-</span>wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在<code>主题配置文件</code>中，找到以下配置项，将各个文章字数相关的配置激活即可，不想显示的设置为<code>false</code>。</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">postInfo<span class="token punctuation">:</span>  date<span class="token punctuation">:</span> <span class="token boolean">true</span> # 发布日期  update<span class="token punctuation">:</span> <span class="token boolean">true</span> # 更新日期  wordCount<span class="token punctuation">:</span> <span class="token boolean">true</span> # 文章字数统计  totalCount<span class="token punctuation">:</span> <span class="token boolean">true</span> # 站点总文章字数  min2read<span class="token punctuation">:</span> <span class="token boolean">true</span> # 文章阅读时长  readCount<span class="token punctuation">:</span> <span class="token boolean">true</span> # 文章阅读次数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h1><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。看了一下，我使用的是默认状态，没有什么特殊要修改的。</p><h1 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h1><p>网站上展示位置位于首页 banner 中的下方个人信息配置。</p><h2 id="开启与关闭"><a href="#开启与关闭" class="headerlink" title="开启与关闭"></a>开启与关闭</h2><p>在 <code>主题配置文件</code> 中找到 <code>socialLink</code>，去掉注释符号 <code>#</code>即启用，添加注释符号 <code>#</code> 即不启用。同时可以修改社交链接地址或者属性值。</p><pre class="line-numbers language-jsx"><code class="language-jsx">socialLink<span class="token punctuation">:</span>  github<span class="token punctuation">:</span>  https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token regex">/Pamarus/</span>  email<span class="token punctuation">:</span> jiaqi0725@gmail<span class="token punctuation">.</span>com  facebook<span class="token punctuation">:</span> # https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>com<span class="token operator">/</span>xxx  twitter<span class="token punctuation">:</span> # https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>twitter<span class="token punctuation">.</span>com<span class="token operator">/</span>xxx  qq<span class="token punctuation">:</span> <span class="token number">572753425</span>  weibo<span class="token punctuation">:</span> # https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>weibo<span class="token punctuation">.</span>com<span class="token operator">/</span>xxx  zhihu<span class="token punctuation">:</span> # https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>zhihu<span class="token punctuation">.</span>com<span class="token operator">/</span>xxx  rss<span class="token punctuation">:</span> <span class="token boolean">true</span> # <span class="token boolean">true</span>、<span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新增或删除社交链接"><a href="#新增或删除社交链接" class="headerlink" title="新增或删除社交链接"></a>新增或删除社交链接</h2><p>可以在主题文件夹的 <code>~/layout/_partial/social-link.ejs</code> 文件中，新增需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>socialLink<span class="token punctuation">.</span>github<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%<span class="token punctuation">=</span></span> <span class="token attr-name">theme.socialLink.github</span> <span class="token attr-name">%</span><span class="token punctuation">></span><span class="token attr-name">"</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fab</span> <span class="token attr-name">fa-github"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：fa-github）你可以在 Font Awesome 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: fab <code>fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p>注意: 本主题中使用的 Font Awesome 版本为 5.11.0。</p></blockquote><h1 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h1><ul><li><p>在主题文件夹的 <code>source/medias/reward</code> 文件夹中，将突破替换成自己的微信和支付宝的收款二维码图片。</p></li><li><p>若后缀名称不同，可能网页不显示，此时需要在 <code>主题配置文件</code> 中修改对应图片的后缀名</p></li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">reward<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>  title<span class="token punctuation">:</span> 你的赏识是我前进的动力  wechat<span class="token punctuation">:</span> <span class="token operator">/</span>medias<span class="token operator">/</span>reward<span class="token operator">/</span>wechat<span class="token punctuation">.</span>png  alipay<span class="token punctuation">:</span> <span class="token operator">/</span>medias<span class="token operator">/</span>reward<span class="token operator">/</span>alipay<span class="token punctuation">.</span>png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="添加emoji表情支持"><a href="#添加emoji表情支持" class="headerlink" title="添加emoji表情支持"></a>添加emoji表情支持</h1><p>主题可以使用Hexo 插件 <code>hexo-filter-github-emojis</code> 来支持 emoji表情的生成，把对应的markdown emoji语法（例如：<code>:smile:</code>）转变成会跳跃的emoji表情。</p><ul><li>安装命令如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">npm install hexo<span class="token operator">-</span>filter<span class="token operator">-</span>github<span class="token operator">-</span>emojis <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在 <code>站点配置文件</code> 中，新增以下的配置项：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">githubEmojis<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>  className<span class="token punctuation">:</span> github<span class="token operator">-</span>emoji  inject<span class="token punctuation">:</span> <span class="token boolean">true</span>  styles<span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>示例</li></ul><blockquote><p>笑脸 :smile:</p></blockquote><h1 id="添加-RSS-订阅支持"><a href="#添加-RSS-订阅支持" class="headerlink" title="添加 RSS 订阅支持"></a>添加 RSS 订阅支持</h1><p>使用 Hexo 插件 <code>hexo-generator-feed</code> 实现RSS功能。</p><ul><li>安装命令如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">npm install hexo<span class="token operator">-</span>generator<span class="token operator">-</span>feed <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在 <code>站点配置文件</code> 中，新增以下的配置项：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">feed<span class="token punctuation">:</span>  type<span class="token punctuation">:</span> atom  path<span class="token punctuation">:</span> atom<span class="token punctuation">.</span>xml  limit<span class="token punctuation">:</span> <span class="token number">20</span>  hub<span class="token punctuation">:</span>  content<span class="token punctuation">:</span>  content_limit<span class="token punctuation">:</span> <span class="token number">140</span>  content_limit_delim<span class="token punctuation">:</span> <span class="token string">' '</span>  order_by<span class="token punctuation">:</span> <span class="token operator">-</span>date  icon<span class="token punctuation">:</span> icon<span class="token punctuation">.</span>png  autodiscovery<span class="token punctuation">:</span> <span class="token boolean">true</span>  template<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>执行 <code>hexo c &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>~/blog/public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</li></ul><h1 id="配置音乐播放器"><a href="#配置音乐播放器" class="headerlink" title="配置音乐播放器"></a>配置音乐播放器</h1><p>在 <code>主题配置文件</code> 中激活music配置即可：</p><pre class="line-numbers language-jsx"><code class="language-jsx">music<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>  title<span class="token punctuation">:</span> #非吸底模式有效    enable<span class="token punctuation">:</span> <span class="token boolean">true</span>    show<span class="token punctuation">:</span> 音乐放松  autoHide<span class="token punctuation">:</span> <span class="token boolean">true</span>    # hide automaticaly  server<span class="token punctuation">:</span> netease   #require    music platform<span class="token punctuation">:</span> netease<span class="token punctuation">,</span> tencent<span class="token punctuation">,</span> kugou<span class="token punctuation">,</span> xiami<span class="token punctuation">,</span> baidu  type<span class="token punctuation">:</span> playlist    #require song<span class="token punctuation">,</span> playlist<span class="token punctuation">,</span> album<span class="token punctuation">,</span> search<span class="token punctuation">,</span> artist  id<span class="token punctuation">:</span> <span class="token number">41220761</span>     #require    song id <span class="token operator">/</span> playlist id <span class="token operator">/</span> album id <span class="token operator">/</span> search keyword  fixed<span class="token punctuation">:</span> <span class="token boolean">true</span>       # 开启吸底模式  autoplay<span class="token punctuation">:</span> <span class="token boolean">false</span>   # 是否自动播放  theme<span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  loop<span class="token punctuation">:</span> <span class="token string">'all'</span>       # 音频循环播放<span class="token punctuation">,</span> 可选值<span class="token punctuation">:</span> <span class="token string">'all'</span><span class="token punctuation">,</span> <span class="token string">'one'</span><span class="token punctuation">,</span> <span class="token string">'none'</span>  order<span class="token punctuation">:</span> <span class="token string">'random'</span>   # 音频循环顺序<span class="token punctuation">,</span> 可选值<span class="token punctuation">:</span> <span class="token string">'list'</span><span class="token punctuation">,</span> <span class="token string">'random'</span>  preload<span class="token punctuation">:</span> <span class="token string">'auto'</span>   # 预加载，可选值<span class="token punctuation">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span> <span class="token string">'metadata'</span><span class="token punctuation">,</span> <span class="token string">'auto'</span>  volume<span class="token punctuation">:</span> <span class="token number">0.4</span>       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded<span class="token punctuation">:</span> <span class="token boolean">true</span>  # 列表默认折叠  hideLrc<span class="token punctuation">:</span> <span class="token boolean">false</span>     # 隐藏歌词<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ul><li>server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。</li><li>type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）</li><li>id获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，playlist 的 id 即为这串数字。</li></ul></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建（7）：NexT主题无custom.styl文件，如何自定义样式</title>
      <link href="/2020/06/04/hexo-bo-ke-da-jian-7-next-zhu-ti-wu-custom.styl-wen-jian-ru-he-zi-ding-yi-yang-shi/"/>
      <url>/2020/06/04/hexo-bo-ke-da-jian-7-next-zhu-ti-wu-custom.styl-wen-jian-ru-he-zi-ding-yi-yang-shi/</url>
      
        <content type="html"><![CDATA[<p>我的Hexo博客主题版本是 v4.2.0，NexT主题版本是 v7.8.0，没有 <code>next/source/css/_custom/</code> 文件夹和 <code>custom.styl</code> 文件，而网上很多教程都是在这个 <code>custom.styl</code> 文件中添加自定义CSS代码，针对这种情况，搜索查看了一些文章和官方issues，找到了新版本自定义CSS代码的方法。</p><blockquote class="question">注：如何查看Hexo博客和NexT主题版本<p>分别在博客文件夹和主题文件夹中，找到并打开 <code>package.json</code> 文件，即可看到版本信息，如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"hexo-theme-next"</span><span class="token punctuation">,</span>  <span class="token string">"version"</span><span class="token punctuation">:</span> <span class="token string">"7.8.0"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token string">"hexo"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token string">"version"</span><span class="token punctuation">:</span> <span class="token string">"4.2.0"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><a id="more"></a><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在参考网上文章配置博客网页端显示样式时，发现教程中都是说在<code>~next/source/css/_custom/custom.styl</code> 文件中添加CSS代码。但我的NexT文件夹中并没有这个文件。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>使用自定义CSS的方法：</p><ul><li>在主题配置文件 <code>_config.yml</code>中找到 <code>custom_file_path</code>，如下</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx"># Define custom file paths<span class="token punctuation">.</span># Create your custom files <span class="token keyword">in</span> site directory <span class="token template-string"><span class="token string">`source/_data`</span></span> and uncomment needed files below<span class="token punctuation">.</span>custom_file_path<span class="token punctuation">:</span>  #head<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>head<span class="token punctuation">.</span>swig  #header<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>header<span class="token punctuation">.</span>swig  #sidebar<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>sidebar<span class="token punctuation">.</span>swig  #postMeta<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>post<span class="token operator">-</span>meta<span class="token punctuation">.</span>swig  #postBodyEnd<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>post<span class="token operator">-</span>body<span class="token operator">-</span>end<span class="token punctuation">.</span>swig  #footer<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>footer<span class="token punctuation">.</span>swig  #bodyEnd<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>body<span class="token operator">-</span>end<span class="token punctuation">.</span>swig  #variable<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>variables<span class="token punctuation">.</span>styl  #mixin<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>mixins<span class="token punctuation">.</span>styl  style<span class="token punctuation">:</span> source<span class="token operator">/</span>_data<span class="token operator">/</span>styles<span class="token punctuation">.</span>styl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>按照提示，新建 <code>~blog/source/_data</code> 文件夹，再在文件夹内新建 <code>styles.styl</code> 文件。</li><li>将 <code>style: source/_data/styles.styl</code> 前的#号删掉，使其生效。</li></ul><p>之后将自定义样式的代码放在这个文件中即可。</p><blockquote class="question">注意：<p><code>~blog/source/_data</code> 文件夹和 <code>styles.styl</code> 文件是在blog根目录中新建，而不是在next根目录中。</p></blockquote><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://github.com/theme-next/hexo-theme-next/issues/973" target="_blank" rel="noopener">NexT V7.2.0:How to change blog background？如何更改博客背景？ #973</a></p><p><a href="https://blog.csdn.net/chrishly3/article/details/103992492" target="_blank" rel="noopener">hexo个人博客 next主题添加背景图片(无custom.styl情况)</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing学习记录（3）：2D几何图形绘制</title>
      <link href="/2020/05/25/processing-xue-xi-ji-lu-3-2d-ji-he-tu-xing-hui-zhi/"/>
      <url>/2020/05/25/processing-xue-xi-ji-lu-3-2d-ji-he-tu-xing-hui-zhi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这一篇介绍Processing基本的2D几何图标的绘制。</p></blockquote><a id="more"></a><h1 id="类型及函数表"><a href="#类型及函数表" class="headerlink" title="类型及函数表"></a>类型及函数表</h1><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-01.jpg" alt="Processing学习记录（3）-01"></p><h1 id="点"><a href="#点" class="headerlink" title="点"></a>点</h1><h2 id="函数及代码"><a href="#函数及代码" class="headerlink" title="函数及代码"></a>函数及代码</h2><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token function">point</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>点的位置用x坐标和y坐标表示，两者以一个逗号隔开。</li><li>圆点坐标是 (0,0)。</li><li>举例如下：</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 设置画布大小为200*200</span>  <span class="token function">point</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// 在坐标100,100画一个点</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ul><li>点很小，仔细观察才能看见画布中心位置有一个点。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-02.jpg" alt="Processing学习记录（3）-02"></p><h2 id="调整点的大小"><a href="#调整点的大小" class="headerlink" title="调整点的大小"></a>调整点的大小</h2><ul><li>Processing中的点具有大小，与数学中点的概念是不一样的。</li><li>默认点的大小是一个像素。</li><li>调整点的大小的函数是：strokeWeight();。</li><li>代码及效果如下</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 设置画布大小为200*200</span>  <span class="token function">strokeWeight</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 设置点大小为10</span>  <span class="token function">point</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// 在坐标100,100画一个点</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意：strokeWeight()需要放在point()函数的上一行，否则不生效。</li><li>此时看，中心点的圆就很大很明显了。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-03.jpg" alt="Processing学习记录（3）-03"></p><h2 id="案例：模拟椒盐噪声"><a href="#案例：模拟椒盐噪声" class="headerlink" title="案例：模拟椒盐噪声"></a>案例：模拟椒盐噪声</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为400*200</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 设置背景颜色为纯黑色</span>  <span class="token function">noLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">// 只画一次，即draw只执行一次</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">stroke</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//设置点的颜色为白色</span>  <span class="token keyword">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">10000</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">point</span><span class="token punctuation">(</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 循环10000次，每次随机在窗口内画一个点</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-04.jpg" alt="Processing学习记录（3）-04"></p><p><br /><br /><br /></p><p>——————以下2020年5月27日更新——————</p><h1 id="线段"><a href="#线段" class="headerlink" title="线段"></a>线段</h1><h2 id="函数及代码-1"><a href="#函数及代码-1" class="headerlink" title="函数及代码"></a>函数及代码</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">line</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>前两个参数<code>x1,y1</code>设置线段的起点，后两个参数<code>x2,y2</code>设置线段的终点，两点确定一条线段。</li><li>举例如下：</li></ul><pre class="line-numbers language-Python"><code class="language-Python">void setup() {  size(200,200);        // 设置画布大小为200*200  line(60,20,20,60);    // 把坐标为(60,20)、(20,60)的两个点连接为线段}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-05.jpg" alt="Processing学习记录（3）-05"></p><h1 id="三角形"><a href="#三角形" class="headerlink" title="三角形"></a>三角形</h1><h2 id="函数及代码-2"><a href="#函数及代码-2" class="headerlink" title="函数及代码"></a>函数及代码</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">triangle</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>x3<span class="token punctuation">,</span>y3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>6个参数，每两个参数定义一个顶点，连接三个顶点绘制三角形。</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 三个顶点分别为(50,50)、(150,100)、(100,150)的三角形</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h2><ul><li>默认是黑色描边，白色填充。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-06.jpg" alt="Processing学习记录（3）-06"></p><h2 id="修改填充颜色"><a href="#修改填充颜色" class="headerlink" title="修改填充颜色"></a>修改填充颜色</h2><ul><li>可以修改图形的填充颜色，使用的是<code>fill()</code>函数。</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 三个顶点分别为(50,50)、(150,100)、(100,150)的三角形</span>  <span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment" spellcheck="true">// 填充红色</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>效果如下：</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-07.jpg" alt="Processing学习记录（3）-07"></p><h2 id="修改描边颜色"><a href="#修改描边颜色" class="headerlink" title="修改描边颜色"></a>修改描边颜色</h2><ul><li>可以修改图形的描边颜色，使用的是<code>stroke()</code>函数。</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 三个顶点分别为(50,50)、(150,100)、(100,150)的三角形</span>  <span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment" spellcheck="true">// 填充红色</span>  <span class="token function">stroke</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 描边白色</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-08.jpg" alt="Processing学习记录（3）-08"></p><p><br /><br /><br /></p><p>——————以下2020年5月28日更新——————</p><h1 id="四边形"><a href="#四边形" class="headerlink" title="四边形"></a>四边形</h1><h2 id="函数及代码-3"><a href="#函数及代码-3" class="headerlink" title="函数及代码"></a>函数及代码</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">quad</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>x3<span class="token punctuation">,</span>y3<span class="token punctuation">,</span>x4<span class="token punctuation">,</span>y4<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>8个参数，每两个参数定义一个顶点，适当改变这些参数可以得到正方形、不规则四边形。</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">quad</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 四个顶点分别为(40,40)、(100,50)、(100,150)、(50,150)的四边形</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-09.jpg" alt="Processing学习记录（3）-09"></p><h1 id="矩形"><a href="#矩形" class="headerlink" title="矩形"></a>矩形</h1><h2 id="函数及代码-4"><a href="#函数及代码-4" class="headerlink" title="函数及代码"></a>函数及代码</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">rect</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>有4个参数，前两个参数<code>a,b</code>定位矩形左上角的坐标，<code>c</code>设置矩形的宽度,<code>d</code>设置高度。</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 左上顶点为(50,50)、宽80、高45的矩形</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-10.jpg" alt="Processing学习记录（3）-10"></p><h2 id="绘制模式"><a href="#绘制模式" class="headerlink" title="绘制模式"></a>绘制模式</h2><ul><li>使用rectMode()函数调整矩形的绘制模式，有4种绘制模式。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-11.jpg" alt="Processing学习记录（3）-11"></p><h3 id="CENTER模式"><a href="#CENTER模式" class="headerlink" title="CENTER模式"></a>CENTER模式</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">rectMode</span><span class="token punctuation">(</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// CENTER模式</span>  <span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 中心点坐标(50,50)、宽80、高45的矩形</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：模式名称字母必须大写，否则不生效。</p></blockquote><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-12.jpg" alt="Processing学习记录（3）-12"></p><h3 id="RADIUS模式"><a href="#RADIUS模式" class="headerlink" title="RADIUS模式"></a>RADIUS模式</h3><ul><li>参数<code>c</code>表示半宽，绘出的宽为2c。参数<code>d</code>表示半高，绘出的高位2d。</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">rectMode</span><span class="token punctuation">(</span>RADIUS<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// RADIUS模式</span>  <span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 中心点坐标(50,50)、宽80、高100的矩形</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-13.jpg" alt="Processing学习记录（3）-13"></p><h3 id="CORNER模式（默认模式）"><a href="#CORNER模式（默认模式）" class="headerlink" title="CORNER模式（默认模式）"></a>CORNER模式（默认模式）</h3><h3 id="CORNERS模式"><a href="#CORNERS模式" class="headerlink" title="CORNERS模式"></a>CORNERS模式</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">rectMode</span><span class="token punctuation">(</span>CORNERS<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// CORNERS模式</span>  <span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 左上顶点坐标(50,50)、右下顶点坐标(100,100)的矩形</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-14.jpg" alt="Processing学习记录（3）-14"></p><h1 id="椭圆"><a href="#椭圆" class="headerlink" title="椭圆"></a>椭圆</h1><h2 id="函数及代码-5"><a href="#函数及代码-5" class="headerlink" title="函数及代码"></a>函数及代码</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">ellipse</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>有4个参数。</li><li>前两个参数<code>a,b</code>定义中心点坐标，<code>c</code>定义椭圆宽度，<code>d</code>定义椭圆高度。</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 中心点坐标(100,100)、宽110、高60的椭圆</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-15.jpg" alt="Processing学习记录（3）-15"></p><h2 id="绘制模式-1"><a href="#绘制模式-1" class="headerlink" title="绘制模式"></a>绘制模式</h2><ul><li>使用ellipseMode()函数调整矩形的绘制模式，有4种绘制模式。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-16.jpg" alt="Processing学习记录（3）-16"></p><h3 id="CENTER模式（默认模式）"><a href="#CENTER模式（默认模式）" class="headerlink" title="CENTER模式（默认模式）"></a>CENTER模式（默认模式）</h3><h3 id="RADIUS模式-1"><a href="#RADIUS模式-1" class="headerlink" title="RADIUS模式"></a>RADIUS模式</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">ellipseMode</span><span class="token punctuation">(</span>RADIUS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// RADIUS模式</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 中心点坐标(100,100)、宽200、高100的椭圆</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-17.jpg" alt="Processing学习记录（3）-17"></p><h3 id="CORNER模式"><a href="#CORNER模式" class="headerlink" title="CORNER模式"></a>CORNER模式</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">ellipseMode</span><span class="token punctuation">(</span>CORNER<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// CORNER模式</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 外接矩形左上角坐标(100,100)、宽100、高50的椭圆</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-18.jpg" alt="Processing学习记录（3）-18"></p><h3 id="CORNERS模式-1"><a href="#CORNERS模式-1" class="headerlink" title="CORNERS模式"></a>CORNERS模式</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置画布大小为200*200  </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">ellipseMode</span><span class="token punctuation">(</span>CORNERS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// CORNERS模式</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 外接矩形左上角坐标(100,100)、外接矩形左上角坐标(180,200)的椭圆</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%883%EF%BC%89-19.jpg" alt="Processing学习记录（3）-19"></p>]]></content>
      
      
      <categories>
          
          <category> 编程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Processing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing学习记录（2）：使用问题及解决方法汇总</title>
      <link href="/2020/05/25/processing-xue-xi-ji-lu-2-shi-yong-wen-ti-ji-jie-jue-fang-fa-hui-zong/"/>
      <url>/2020/05/25/processing-xue-xi-ji-lu-2-shi-yong-wen-ti-ji-jie-jue-fang-fa-hui-zong/</url>
      
        <content type="html"><![CDATA[<p>这篇集中记录Processing学习及使用过程中遇到的一些问题，解决方法。</p><a id="more"></a><h1 id="中文显示乱码"><a href="#中文显示乱码" class="headerlink" title="中文显示乱码"></a>中文显示乱码</h1><ul><li>问题，在Processing输入中文时，显示为乱码，如下</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%882%EF%BC%89-01.jpg" alt="Processing学习记录（2）-01"></p><ul><li>解决方法<ul><li>修改字体，在偏好设置里选择一款支持中文字符的字体。</li><li>Processing默认编辑器和控制台字体为：Source Code Pro，不支持中文字符。</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%882%EF%BC%89-02.jpg" alt="Processing学习记录（2）-02"></p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%882%EF%BC%89-03.jpg" alt="Processing学习记录（2）-03"></p>]]></content>
      
      
      <categories>
          
          <category> 编程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Processing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing学习记录（1）：初相识</title>
      <link href="/2020/05/24/processing-xue-xi-ji-lu-1-chu-xiang-shi/"/>
      <url>/2020/05/24/processing-xue-xi-ji-lu-1-chu-xiang-shi/</url>
      
        <content type="html"><![CDATA[<p>第一篇，初相识</p><a id="more"></a><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>这一步不需要详细介绍，作为个人学习记录，在此备注一下：</p><p>访问 <a href="https://processing.org/" target="_blank" rel="noopener">Processing官网 https://processing.org</a>，根据自己的操作系统，下载对应的版本。我的是mac系统。</p><h1 id="初识界面"><a href="#初识界面" class="headerlink" title="初识界面"></a>初识界面</h1><p>之前接触eclipse等一些开发软件界面，相比较，Processing的开发环境非常简单明了。</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9501-%E7%95%8C%E9%9D%A2.jpg" alt="Processing学习记录01-界面"></p><p>Processing由<code>代码编辑区、工具栏、标签栏、控制台</code>组成。<br>Mac菜单栏在电脑界面顶栏。<br>当点击工具栏<code>运行</code>按钮后，会弹出一个新的窗口，称为显示窗口。</p><p>举例来说，比如代码区编写代码设置画布大小，点击运行，弹出下图中右侧的显示窗口，大小为400*400。(Processing默认画布大小是100*100）</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9502-%E6%98%BE%E7%A4%BA%E7%AA%97%E5%8F%A3.jpg" alt="Processing学习记录02-显示窗口"></p><h1 id="创建第一个图形"><a href="#创建第一个图形" class="headerlink" title="创建第一个图形"></a>创建第一个图形</h1><p>先绘制一个圆</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//画布大小设置为400*400</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 以50,50为圆心，画一个直径为100的圆</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9503-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%BD%A2.jpg" alt="Processing学习记录03-第一个图形"></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>设置画布大小的函数：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token function">size</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>圆的绘制函数为：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token function">ellipse</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>前两个参数<code>x,y</code>(<code>50,50</code>)设置圆心的位置<br>第三个参数<code>width</code>设置长轴，第四个参数<code>height</code>设置短轴。相等时，便是正圆。</p></blockquote><ul><li>setup ()函数<ul><li>标准的Processing主程序的结构之一。</li><li>setup (){ 设置画布 }</li><li>作用是设置画布，<code>{}</code>内的内容只执行一次，一般用来进行初始化设置，如上面的画布大小。</li><li>后面不需要再做改变的设置，可以放在<code>setup ()</code>中。</li></ul></li></ul><h1 id="绘制第一个动画"><a href="#绘制第一个动画" class="headerlink" title="绘制第一个动画"></a>绘制第一个动画</h1><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><pre class="line-numbers language-jsx"><code class="language-jsx">int r <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span>r<span class="token operator">++</span><span class="token punctuation">,</span>r<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//200,200为中心点，一个不断往外扩大的圆</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h2><p>圆连续变大：</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9504-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8A%A8%E7%94%BB.png" alt="Processing学习记录04-第一个动画"></p><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><ul><li>draw ()函数<ul><li>标准的Processing主程序的结构之一。</li><li>draw (){ 开始作画 }</li><li>作用是绘制图形，运行动画，<code>{}</code>内的内容循环执行。每运行一次相当于在画布中绘制一个新的帧，运行完一次后再执行下一次。</li></ul></li></ul><h1 id="第一个交互"><a href="#第一个交互" class="headerlink" title="第一个交互"></a>第一个交互</h1><blockquote><p>调用鼠标绘制一根直线</p></blockquote><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">line</span><span class="token punctuation">(</span>mouseX<span class="token punctuation">,</span>mouseY<span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 从200,200往外绘制一条直线,不消除痕迹</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9505-%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%BA%A4%E4%BA%921.jpg" alt="Processing学习记录05-第一个交互1"></p><h2 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h2><ul><li>mouseX和mouseY是系统变量，是鼠标所在的坐标位置。</li><li>绘画中不消除原有的绘画留下的痕迹。</li><li>如果想要消除痕迹，需要每次载入一个空白页面。如下：</li></ul><h2 id="消除痕迹"><a href="#消除痕迹" class="headerlink" title="消除痕迹"></a>消除痕迹</h2><ul><li>代码如下：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">// 加载空白页面</span>  <span class="token function">line</span><span class="token punctuation">(</span>mouseX<span class="token punctuation">,</span>mouseY<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 从0,0往外绘制一条直线,消除上一条痕迹</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>效果</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Processing%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9506-%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%BA%A4%E4%BA%922.jpg" alt="Processing学习记录06-第一个交互2"></p>]]></content>
      
      
      <categories>
          
          <category> 编程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Processing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建（6）：Valine评论系统优化</title>
      <link href="/2020/05/19/hexo-bo-ke-da-jian-6-valine-ping-lun-xi-tong-you-hua/"/>
      <url>/2020/05/19/hexo-bo-ke-da-jian-6-valine-ping-lun-xi-tong-you-hua/</url>
      
        <content type="html"><![CDATA[<blockquote class="question">上一篇安装好valine评论系统，但是还要一些细节需要优化。</blockquote><a id="more"></a><h1 id="统计数字小标题处如何显示中文“评论数”，而不是valine"><a href="#统计数字小标题处如何显示中文“评论数”，而不是valine" class="headerlink" title="统计数字小标题处如何显示中文“评论数”，而不是valine"></a>统计数字小标题处如何显示中文“评论数”，而不是valine</h1><h2 id="实际显示"><a href="#实际显示" class="headerlink" title="实际显示"></a>实际显示</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%9601-%E9%97%AE%E9%A2%981.jpg" alt="Valine评论系统优化01-问题1"></p><p>这是默认行为。因为NexT允许同时开启多个评论系统（例如同时启用valine和gitalk），这时显示「评论数」文字会造成混乱。</p><h2 id="期望效果"><a href="#期望效果" class="headerlink" title="期望效果"></a>期望效果</h2><pre class="line-numbers language-javascript"><code class="language-javascript">发表于 <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">18</span>   分类于 博客教程  评论数： <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>打开<code>themes -&gt; next -&gt; languages -&gt; zh-CN.yml</code></p><p>在<code>post:</code>标签下添加:</p><p><code>comments.valine: 评论数</code> (显示的汉字自定义，最好和其他评论系统有所区分）</p><pre class="line-numbers language-javascript"><code class="language-javascript">post<span class="token punctuation">:</span>  comments<span class="token punctuation">.</span>valine<span class="token punctuation">:</span> 评论数  posted<span class="token punctuation">:</span> 发表于  edited<span class="token punctuation">:</span> 更新于<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%9602-%E9%97%AE%E9%A2%981.jpg" alt="Valine评论系统优化02-问题1"></p><p>如 <a href="https://pamarus.github.io/" target="_blank" rel="noopener">此博客：https://pamarus.github.io/</a> 所示，正常显示中文<code>评论数</code>。</p><h1 id="如何隐藏浏览器版本和操作系统版本"><a href="#如何隐藏浏览器版本和操作系统版本" class="headerlink" title="如何隐藏浏览器版本和操作系统版本"></a>如何隐藏浏览器版本和操作系统版本</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>评论数据的用户名右侧显示了浏览器版本和操作系统版本，我认为这是多余的，目标是隐藏不显示</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%9603-%E9%97%AE%E9%A2%982.jpg" alt="Valine评论系统优化03-问题2"></p><h2 id="解决-1"><a href="#解决-1" class="headerlink" title="解决"></a>解决</h2><ul><li>进入theme目录下面的<code>source/css</code>文件夹，新建一个文件 <code>custom.styl</code>，如下图</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%9604-%E9%97%AE%E9%A2%982.jpg" alt="Valine评论系统优化04-问题2"></p><ul><li>复制下面这段代码，粘贴到 <code>custom.styl</code> 文件中</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">.</span>vsys<span class="token punctuation">{</span>    display<span class="token punctuation">:</span>none <span class="token operator">!</span>important<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>引入刚刚新建的样式文件</li></ul><p>在custom.styl同级的<code>main.styl</code> 中的最后添加以下代码，引入刚刚新建的样式文件</p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">// custom</span>@<span class="token keyword">import</span> <span class="token string">"custom.styl"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>hexo g -d部署完成</li></ul><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%9605-%E9%97%AE%E9%A2%982.jpg" alt="Valine评论系统优化05-问题2"></p><h1 id="分类、标签、关于页关闭评论功能"><a href="#分类、标签、关于页关闭评论功能" class="headerlink" title="分类、标签、关于页关闭评论功能"></a>分类、标签、关于页关闭评论功能</h1><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在NexT主题中，Valine配置之后，默认所有页面都开启评论功能。在部分页面不想或不需要显示评论功能。那么如何隐藏呢？</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>在 分类、标签、关于页面的本地md文件中，添加comments属性，属性值设置为true或false，来控制打开或关闭该页面的评论功能。</p><p>比如分类页，这样设置：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> 分类date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">:</span><span class="token number">50</span>type<span class="token punctuation">:</span> categoriescomments<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>标签页和关于页等同理。</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://blog.csdn.net/a1059526327/article/details/104266761" target="_blank" rel="noopener">hexo博客next主题使用valine评论标题部分无法显示中文评论数</a></p><p><a href="https://github.com/theme-next/hexo-theme-next/issues/1267" target="_blank" rel="noopener">使用 valine 不显示“评论数“文字 #1267</a></p><p><a href="https://hjxlog.com/posts/20191203a1.html" target="_blank" rel="noopener">hexo-Next主题valine评论系统不显示浏览器版本和操作系统版本</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> NexT </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>valine评论测试</title>
      <link href="/2020/05/18/valine-ping-lun-ce-shi/"/>
      <url>/2020/05/18/valine-ping-lun-ce-shi/</url>
      
        <content type="html"><![CDATA[<p>valine评论测试  <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">😄</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建（5）：NexT主题-集成valine评论系统</title>
      <link href="/2020/05/18/hexo-bo-ke-da-jian-5-next-zhu-ti-ji-cheng-valine-ping-lun-xi-tong/"/>
      <url>/2020/05/18/hexo-bo-ke-da-jian-5-next-zhu-ti-ji-cheng-valine-ping-lun-xi-tong/</url>
      
        <content type="html"><![CDATA[<p>打开next文件夹内的配置文件<code>_config.yml</code>，找到 <code>Comments Settings</code>，选择一个评论系统，设置为<code>true</code>。可选的有：<code>changyan</code>，<code>disqus</code>，<code>disqusjs</code>，<code>gitalk</code>，<code>livere</code>，<code>valine</code>，这几个都是方便配置的。</p><a id="more"></a><h1 id="选择哪种评论系统"><a href="#选择哪种评论系统" class="headerlink" title="选择哪种评论系统"></a>选择哪种评论系统</h1><p>参考以下文章，选择适合自己的：<br><a href="https://www.zhihu.com/question/267598518" target="_blank" rel="noopener">Hexo（NexT 主题）评论系统哪个好？</a><br><a href="https://3mile.github.io/archives/128/" target="_blank" rel="noopener">第三方评论系统推荐</a></p><ul><li><a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">changyan（畅言）</a> ，原搜狐畅言，安装 <a href="http://changyan.kuaizhan.com/static/help/o-beian.html" target="_blank" rel="noopener">需要备案号</a>。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F01-%E7%95%85%E8%A8%80%E9%9C%80%E5%A4%87%E6%A1%88.jpg" alt="集成valine评论系统01-畅言需备案"></p><ul><li><a href="https://disqus.com/" target="_blank" rel="noopener">disqus</a> 需要科学上网才能使用。</li><li><a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md" target="_blank" rel="noopener">gitalk</a> 尝试了一下，需要登录GitHub，且只能使用GitHub登录。</li><li><a href="https://livere.com/" target="_blank" rel="noopener">livere（来必力）</a> 来自韩国的产品，中国本土化做的不错，支持微信、QQ、豆瓣等多种登录方式。</li><li><a href="https://valine.js.org/" target="_blank" rel="noopener">valine</a>，无后端，无需登录，轻量，看了一下别的博客，样式也蛮喜欢，最终决定用这个。</li></ul><h1 id="获取APP-ID-和-APP-Key"><a href="#获取APP-ID-和-APP-Key" class="headerlink" title="获取APP ID 和 APP Key"></a>获取APP ID 和 APP Key</h1><h2 id="注册登录LeanCloud"><a href="#注册登录LeanCloud" class="headerlink" title="注册登录LeanCloud"></a>注册登录LeanCloud</h2><p>评论系统其实是放在Leancloud上的，因此首先需要去注册一个账号</p><p><a href="https://tab.leancloud.cn/login.html#/signup" target="_blank" rel="noopener">Leancloud官网，点我注册</a></p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F02-%E6%B3%A8%E5%86%8CLeanCould.jpg" alt="集成valine评论系统02-注册LeanCould"></p><h2 id="实名认证和邮箱认证"><a href="#实名认证和邮箱认证" class="headerlink" title="实名认证和邮箱认证"></a>实名认证和邮箱认证</h2><p>注册成功后，根据提示，需要分别完成实名认证和邮箱验证</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F03.jpg" alt="集成valine评论系统03"></p><ul><li>实名认证——选择个人认证</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F04.jpg" alt="集成valine评论系统04"></p><ul><li>输入姓名、身份证号</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F05.jpg" alt="集成valine评论系统05"></p><ul><li>支付宝认证</li><li>感觉还蛮麻烦，介意的选择其他的</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F06.jpg" alt="集成valine评论系统06"></p><ul><li>认证成功<br><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F07.jpg" alt="集成valine评论系统07"></li></ul><h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><ul><li>进入控制台后点击左下角创建应用：</li></ul><blockquote><p>关于节点：<br>LeanCloud 有三个节点可供选择，分别是华北节点，华东节点以及国际节点。<br>如果用户主体在国内，建议使用华北节点与华东节点，如果用户主体在国外建议使用 国际节点。根据国家《网络安全法》的要求，使用 LeanCloud 国内节点服务的用户必须进行 实名认证6（个人或者企业认证）。在 LeanCloud 控制台新建应用以后不再支持更换节点。</p></blockquote><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F09.jpg" alt="集成valine评论系统09"></p><ul><li>选择开发版，名称自定义</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F10.jpg" alt="集成valine评论系统10"></p><ul><li>创建成功</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F11.jpg" alt="集成valine评论系统11"></p><ul><li>点击名称，进入刚刚创建的应用，选择左下角的<code>设置</code> &gt; <code>应用Key</code>，然后就能看到你的<code>APP ID</code>和<code>APP Key</code>了：</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F12.jpg" alt="集成valine评论系统12"></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="填写appid-和-appkey"><a href="#填写appid-和-appkey" class="headerlink" title="填写appid 和 appkey"></a>填写<code>appid</code> 和 <code>appkey</code></h2><p>打开next文件夹内的配置文件<code>_config.yml</code>，找到<code>Valine</code>配置项，设置为<code>true</code>，填入<code>appid</code> 和 <code>appkey</code></p><pre class="line-numbers language-jsx"><code class="language-jsx"># Valine# For more information<span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>valine<span class="token punctuation">.</span>js<span class="token punctuation">.</span>org<span class="token punctuation">,</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>xCss<span class="token operator">/</span>Valinevaline<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">false</span>  appid<span class="token punctuation">:</span> # Your leancloud application appid  appkey<span class="token punctuation">:</span> # Your leancloud application appkey<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加-Web-安全域名"><a href="#添加-Web-安全域名" class="headerlink" title="添加 Web 安全域名"></a>添加 Web 安全域名</h2><p>在<code>Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名</code> 把你的域名加进去</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F13-%E6%B7%BB%E5%8A%A0web%E5%AE%89%E5%85%A8%E5%9F%9F%E5%90%8D.jpg" alt="集成valine评论系统13-添加web安全域名"></p><p>最后，<code>hexo g -d</code>命令部署，文章页面底部显示评论文本框。无需登录就可以进行评论，还支持Emoji。</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F14-%E6%88%90%E5%8A%9F.jpg" alt="集成valine评论系统14-成功"></p><h1 id="评论数据管理"><a href="#评论数据管理" class="headerlink" title="评论数据管理"></a>评论数据管理</h1><p>由于Valine 是无后端评论系统，所以也就没有开发评论数据管理功能。请自行登录Leancloud应用管理。</p><p>具体步骤：<code>登录 -&gt; 选择你创建的应用 -&gt; 存储 -&gt; 选择Class Comment</code>，就可以看见评论数据了。</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E9%9B%86%E6%88%90valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F15-%E6%9F%A5%E7%9C%8B%E8%AF%84%E8%AE%BA%E6%95%B0%E6%8D%AE.jpg" alt="集成valine评论系统15-查看评论数据"></p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">valine文档-快速开始</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> NexT </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建（4）：NexT主题-首页不显示全部内容，显示预览</title>
      <link href="/2020/05/13/hexo-bo-ke-da-jian-4-next-zhu-ti-shou-ye-bu-xian-shi-quan-bu-nei-rong-xian-shi-yu-lan/"/>
      <url>/2020/05/13/hexo-bo-ke-da-jian-4-next-zhu-ti-shou-ye-bu-xian-shi-quan-bu-nei-rong-xian-shi-yu-lan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Next主题的基本配置都差不多了，现在还有一个问题。<br>就是首页默认显示文章的全部内容，而不是预览，如何设置只显示部分呢？</p></blockquote><a id="more"></a><center style="font-size:14px;color:#C0C0C0;text-decoration:underline;"><img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"    src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/NexT主题如何设置首页只显示预览01.jpg" width="70%" height="70%" /><p>01-默认显示全部</p></center><p>一般有以下三种方法</p><h1 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h1><p>这种方式是 Hexo 提供的方式</p><p>在文章中使用 <code>&lt;!-- more --&gt;</code> 手动进行截断，显示效果如下：</p><center><img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"    src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/NexT主题如何设置首页只显示预览02-显示预览.jpg" width="70%" height="70%" /></center><p>明显可以看见，显示的内容不会被格式化。也可以根据 <code>&lt;!-- more --&gt;</code> 放置的位置，来控制要显示的预览内容。</p><h1 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h1><p>自动形成摘要，在<code>主题配置文件</code>中查找如下这段代码：</p><pre class="line-numbers language-jsx"><code class="language-jsx"># Automatically Excerpt<span class="token punctuation">.</span> Not recommend<span class="token punctuation">.</span># Please use <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> more <span class="token operator">--</span><span class="token operator">></span> <span class="token keyword">in</span> the post to control excerpt accurately<span class="token punctuation">.</span>auto_excerpt<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">true</span>  length<span class="token punctuation">:</span> <span class="token number">150</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果没有则添加这段代码，可能不同的主题会不支持这种方法。、<br><code>length</code> ：设定文章预览的文本长度。默认截取的长度为 <code>150</code> 字符，可以根据需要自行设定。</p><p>这种方法的问题是：会格式化你文章的样式，直接把文字挤在一起显示，最后会有 <code>…</code>。</p><p>而第一种方法，展示出来的就是你原本文章的样式。</p><h1 id="第三种方法"><a href="#第三种方法" class="headerlink" title="第三种方法"></a>第三种方法</h1><ul><li>在文章的 <code>front-matter</code> 中添加 <code>description</code>字段，并填写要展示的预览信息</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span>title<span class="token punctuation">:</span> NexT主题基本属性的配置date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">08</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">32</span>tags<span class="token punctuation">:</span> <span class="token punctuation">[</span>Hexo_Blog<span class="token punctuation">,</span>NexT<span class="token punctuation">,</span>博客教程<span class="token punctuation">]</span>comments<span class="token punctuation">:</span> <span class="token boolean">true</span>categories<span class="token punctuation">:</span> 博客教程description<span class="token punctuation">:</span> 如何配置样式、语言、菜单、侧栏等<span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在主题配置文件中将 <code>excerpt_description</code> 设置为<code>true</code></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"># Automatically excerpt description <span class="token keyword">in</span> homepage <span class="token keyword">as</span> preamble text<span class="token punctuation">.</span>excerpt_description<span class="token punctuation">:</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><center>  <img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"       src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/NexT主题如何设置首页只显示预览03.jpg" width="70%" height="70%"  /></center><p>这种方式的缺点在于，生成的预览信息在文章的详情页是不显示的。</p><ul><li>这种方法，可以写文章的副标题。只要将<code>excerpt_description</code> 设置为<code>false</code>，如下：</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"># Automatically excerpt description <span class="token keyword">in</span> homepage <span class="token keyword">as</span> preamble text<span class="token punctuation">.</span>excerpt_description<span class="token punctuation">:</span> <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><center>  <img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"       src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/NexT主题如何设置首页只显示预览04.jpg" width="70%" height="70%"  /></center><blockquote><p>综上，根据需要选择相应的方式。</p></blockquote><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="http://theme-next.iissnan.com/faqs.html" target="_blank" rel="noopener">如何设置「阅读全文」？</a></p><p><a href="http://blog.smallerpig.com/set-hexo-show-more-button-on-indexpage.html" target="_blank" rel="noopener">让hexo的首页只显示文章的部分内容而不是全部</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建（3）：NexT主题-跳转分类、标签、关于页报错，无法打开怎么办</title>
      <link href="/2020/05/05/hexo-bo-ke-da-jian-3-next-zhu-ti-tiao-zhuan-fen-lei-biao-qian-guan-yu-ye-bao-cuo-wu-fa-da-kai-zen-me-ban/"/>
      <url>/2020/05/05/hexo-bo-ke-da-jian-3-next-zhu-ti-tiao-zhuan-fen-lei-biao-qian-guan-yu-ye-bao-cuo-wu-fa-da-kai-zen-me-ban/</url>
      
        <content type="html"><![CDATA[<blockquote><p>上一步我们成功安装主题，打开博客地址，操作之后会发现，点击首页、归档菜单是正常打开的。但是点击分类、标签、关于页时，跳转404，报错无法打开。如下图：</p></blockquote><a id="more"></a><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/%E8%B7%B3%E8%BD%AC%E5%88%86%E7%B1%BB%E3%80%81%E6%A0%87%E7%AD%BE%E3%80%81%E5%85%B3%E4%BA%8E%E9%A1%B5%E6%8A%A5%E9%94%9901-%E8%B7%B3%E8%BD%AC%E6%8A%A5%E9%94%99.jpg" alt="01-跳转报错"></p><h2 id="第1种方法：删除配置文件中空格"><a href="#第1种方法：删除配置文件中空格" class="headerlink" title="第1种方法：删除配置文件中空格"></a>第1种方法：删除配置文件中空格</h2><blockquote><p>关于链接显示<code>20%</code>的问题</p></blockquote><p>这个问题更多发生在，点击首页和归档菜单，显示404，查看链接地址，结尾显示<code>20%</code>。比如：<code>https://xxx.github.io/%20</code></p><p><code>20%</code>代表空格，而这个空格来自NexT主题的配置文件中。<br>配置文件中代码如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript">menu<span class="token punctuation">:</span>  home<span class="token punctuation">:</span> <span class="token operator">/</span> <span class="token operator">||</span> home  #about<span class="token punctuation">:</span> <span class="token operator">/</span>about<span class="token operator">/</span> <span class="token operator">||</span> user  #tags<span class="token punctuation">:</span> <span class="token operator">/</span>tags<span class="token operator">/</span> <span class="token operator">||</span> tags  #categories<span class="token punctuation">:</span> <span class="token operator">/</span>categories<span class="token operator">/</span> <span class="token operator">||</span> th  archives<span class="token punctuation">:</span> <span class="token operator">/</span>archives<span class="token operator">/</span> <span class="token operator">||</span> archive  #schedule<span class="token punctuation">:</span> <span class="token operator">/</span>schedule<span class="token operator">/</span> <span class="token operator">||</span> calendar  #sitemap<span class="token punctuation">:</span> <span class="token operator">/</span>sitemap<span class="token punctuation">.</span>xml <span class="token operator">||</span> sitemap  #commonweal<span class="token punctuation">:</span> <span class="token operator">/</span><span class="token number">404</span><span class="token operator">/</span> <span class="token operator">||</span> heartbeat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将配置文件里<code>||</code>之前所有的空格删掉，重新<code>hexo g -d</code>部署，解决问题。</p><p>如果你是这种问题，可以尝试一下。</p><blockquote><p>建议参阅第3种方法，检查一下是不是第3种方法中说明的问题。</p></blockquote><h2 id="第2种方法：重新clone安装主题"><a href="#第2种方法：重新clone安装主题" class="headerlink" title="第2种方法：重新clone安装主题"></a>第2种方法：重新clone安装主题</h2><blockquote><p><code>20%</code>这种问题如何发生的：</p></blockquote><ul><li>我当时是因为clone主题出现的问题。<br>在这个网站 <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT</a> clone主题。clone之后，点击首页、归档跳转的链接都带<code>20%</code>，如下图：</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/%E8%B7%B3%E8%BD%AC%E5%88%86%E7%B1%BB%E3%80%81%E6%A0%87%E7%AD%BE%E3%80%81%E5%85%B3%E4%BA%8E%E9%A1%B5%E6%8A%A5%E9%94%9902-%E8%B7%B3%E8%BD%AC%E6%8A%A5%E9%94%99.jpg" alt="02-跳转报错"></p><ul><li><p>出现问题之后，参阅 <a href="https://github.com/iissnan/hexo-theme-next/blob/master/README.cn.md" target="_blank" rel="noopener">GitHub仓库页</a>，会明显看见不再维护的提示。</p></li><li><p>查阅issues找问题，也有issuus报此问题：<a href="https://github.com/iissnan/hexo-theme-next/issues/2233" target="_blank" rel="noopener">生成URL存在空格%20，导致github pages无法访问 #2233</a> ， <a href="https://github.com/iissnan/hexo-theme-next/issues/2209" target="_blank" rel="noopener">分类无法正常使用 #2209</a> ，等等，可知此问题已在新版中解决。</p></li><li><p>所以，建议在 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">这个仓库</a> clone安装最新版本NexT主题。大概率解决这个问题。</p></li></ul><blockquote><p>如果安装最新版本后，仍出现问题，比如首页、归档也可以正常打开，但是分类标签页报错404，参见下面的方法。</p></blockquote><h2 id="第3种方法：创建分类、标签等页面"><a href="#第3种方法：创建分类、标签等页面" class="headerlink" title="第3种方法：创建分类、标签等页面"></a>第3种方法：创建分类、标签等页面</h2><blockquote><p>安装最新主题（v7.8.0），启用并点击分类、标签、关于页面，404报错。并且，侧边栏<code>分类</code>、<code>标签</code>都无法点击。</p></blockquote><h3 id="找问题"><a href="#找问题" class="headerlink" title="找问题"></a>找问题</h3><p>看一下404的英文提示文字，大概是没有链接对应的文件的意思。</p><p>查阅一些文章，之后检查<code>public/</code>文件夹和对比其他博客的GitHub仓库文件，发现：<br><code>public/categories/</code>、<code>public/tags/</code> 文件夹下没有<code>index.html</code>文件，<code>public/</code>文件夹下没有<code>about</code>文件夹。所以初步判定问题是，菜单项没有根文件，不能链接到对应页面。</p><p>所以设想的解决方法就是创建分类、标签、关于页面。</p><h3 id="创建-分类-页面"><a href="#创建-分类-页面" class="headerlink" title="创建 [分类] 页面"></a>创建 [分类] 页面</h3><ul><li>（1）终端窗口下，cd 到你的博客目录。</li></ul><blockquote><p>CD方法：<br>输入<code>cd</code>+<code>空格</code><br>将想要定位的文件夹拖进终端，将会自动填充文件路径，再点击回车</p></blockquote><ul><li>（2）输入命令，生成文件：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/%E8%B7%B3%E8%BD%AC%E5%88%86%E7%B1%BB%E3%80%81%E6%A0%87%E7%AD%BE%E3%80%81%E5%85%B3%E4%BA%8E%E9%A1%B5%E6%8A%A5%E9%94%9903-%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2.jpg" alt="03-创建分类页面"></p><ul><li>（3）找到本地文件<ul><li>你会发现你的<code>source/</code>文件夹下有了<code>categories/index.md</code>文件</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/%E8%B7%B3%E8%BD%AC%E5%88%86%E7%B1%BB%E3%80%81%E6%A0%87%E7%AD%BE%E3%80%81%E5%85%B3%E4%BA%8E%E9%A1%B5%E6%8A%A5%E9%94%9904-%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6.jpg" alt="04-本地文件"></p><ul><li><p>（4）修改<code>title</code>（可选），添加页面类型<code>type</code></p><ul><li><p>打开<code>index.md</code>文件将 title 设置为title: 分类。<code>分类</code>将是网页显示的标题，按照自己喜好修改或者不修改。</p></li><li><p>新增属性<code>type</code>，设置为<code>categories</code>，将自动为这个页面显示分类。页面内容如下：</p></li></ul></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">title<span class="token punctuation">:</span> 分类date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">:</span><span class="token number">50</span>type<span class="token punctuation">:</span> categories<span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>（5）<code>hexo g -d</code>，生成部署即可。</p></li><li><p>（6）把文章归入分类只需在文章的顶部标题下方添加categories字段，即可自动创建分类名并加入对应的分类中。</p></li></ul><h3 id="创建-标签-页面"><a href="#创建-标签-页面" class="headerlink" title="创建 [标签] 页面"></a>创建 [标签] 页面</h3><p>过程同上。</p><pre class="line-numbers language-javascript"><code class="language-javascript">hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript">title<span class="token punctuation">:</span> 标签date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">54</span><span class="token punctuation">:</span><span class="token number">11</span>type<span class="token punctuation">:</span> tags<span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建-关于-页面"><a href="#创建-关于-页面" class="headerlink" title="创建 [关于] 页面"></a>创建 [关于] 页面</h3><p>过程同上。</p><pre class="line-numbers language-javascript"><code class="language-javascript">hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript">title<span class="token punctuation">:</span> 关于date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">05</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">:</span><span class="token number">44</span>type<span class="token punctuation">:</span> about<span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p><a href="https://blog.csdn.net/weixin_43790779/article/details/104854588" target="_blank" rel="noopener">1.Hexo+next主题下，点击首页，分类等导航时出现404错误</a><br><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">2.NexT仓库</a><br><a href="https://blog.csdn.net/Wonz5130/article/details/84666519" target="_blank" rel="noopener">3.解决 Hexo 搭建博客显示不出分类、标签问题</a><br><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">4.NexT使用文档</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> NexT </tag>
            
            <tag> 博客教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown（2）：如何添加多个tags</title>
      <link href="/2020/05/05/markdown-2-ru-he-tian-jia-duo-ge-tags/"/>
      <url>/2020/05/05/markdown-2-ru-he-tian-jia-duo-ge-tags/</url>
      
        <content type="html"><![CDATA[<h2 id="显示问题"><a href="#显示问题" class="headerlink" title="显示问题"></a>显示问题</h2><p>当添加多个标签时，小书匠编辑器默认是这样的：</p><pre class="line-numbers language-jsx"><code class="language-jsx">tags<span class="token punctuation">:</span> 新建<span class="token punctuation">,</span>模板<span class="token punctuation">,</span>小书匠<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时网页端显示就会有问题，三个标签识别为一个:</p><blockquote><p>#新建,模板,小书匠</p></blockquote><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><a id="more"></a><p>如果要添加多个标签，有两种方法书写，都有效：</p><ul><li>中括号包围</li></ul><blockquote><pre><code>tags: [新建,模板,小书匠]</code></pre><p>需要将标签以英文逗号隔开，并在最外层用中括号包围。</p></blockquote><ul><li>换行书写</li></ul><blockquote><pre><code>tags:   - 新建  - 模板  - 小书匠</code></pre></blockquote><ul><li>实际显示效果：</li></ul><blockquote><p>#新建   #模板   #小书匠</p></blockquote><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">NexT主题配置</a></p><p><a href="https://www.zhihu.com/question/42909784" target="_blank" rel="noopener">知乎——请问，如何在markdown的tags中添加多个标签，比如有生活，有随笔等？</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建（2）：更换主题样式及基本属性配置</title>
      <link href="/2020/05/04/hexo-bo-ke-da-jian-2-geng-huan-zhu-ti-yang-shi-ji-ji-ben-shu-xing-pei-zhi/"/>
      <url>/2020/05/04/hexo-bo-ke-da-jian-2-geng-huan-zhu-ti-yang-shi-ji-ji-ben-shu-xing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>博客搭建成功后，下一步进行主题选择及配置工作等。如何创建hexo博客，看之前一篇记录：</p></blockquote><blockquote><p>更多主题样式参考：<br><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo官网 https://hexo.io/themes/</a><br><a href="https://easyhexo.com/2-Theme-use-and-config/" target="_blank" rel="noopener">一些Hexo主题介绍</a></p><p>看有文章说NexT是应用最广泛的主题，最开始对博客还不熟悉，为尽快写文章，先选定NexT上手。熟悉之后，再看看其他主题样式，或许可以选定其他更喜欢的。</p></blockquote><a id="more"></a><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><h2 id="克隆下载主题"><a href="#克隆下载主题" class="headerlink" title="克隆下载主题"></a>克隆下载主题</h2><ul><li>cd到博客本地文件夹，</li></ul><blockquote><p>cd方法：<br>终端界面输入<code>cd</code>+<code>空格</code><br>将想要定位的文件夹拖进终端，就能自动填充文件路径，点击回车就OK了</p></blockquote><ul><li>再输入以下命令：</li></ul><pre class="line-numbers language-jsx"><code class="language-jsx">git clone https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>theme<span class="token operator">-</span>next<span class="token operator">/</span>hexo<span class="token operator">-</span>theme<span class="token operator">-</span>next themes<span class="token operator">/</span>next<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><strong>格式：</strong></p><pre><code>git clone 主题的GitHub链接 themes/主题名</code></pre><p>  （themes是本地博客文件夹名，<code>主题名</code>是将要保存到本地的主题文件夹名称。这个是NexT主题，本地文件夹名为next）</p></blockquote><ul><li>等待下载完成:</li></ul><center style="font-size:14px;color:#C0C0C0;text-decoration:underline;"><img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"     src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/更换主题样式01-克隆主题.jpg" width="80%" height="80%" /><p>01-克隆主题</p></center><ul><li>最后本地 <code>themes</code> 文件夹下载成功next文件。</li></ul><center style="font-size:14px;color:#C0C0C0;text-decoration:underline;">  <img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"       src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/更换主题样式02-本地文件.jpg" width="15%" height="15%" /><p>02-下载成功</p></center><h2 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h2><ul><li>打开博客本地文件夹的配置文件 <code>_config.yml</code>， 找到<code>theme</code>字段，并将其值从默认的 landscape 更改为 next。</li></ul><blockquote><p>注：Hexo中有两份主要的配置文件，其名称都是<code>_config.yml</code>。<br>一份位于<code>博客根目录里</code>，包含Hexo本身的配置。<br>另一份位于<code>主题目录里</code>，包含主题相关的一些配置。<br>为描述方便，以下说明中将前者称为 <code>站点配置文件</code>，后者称为<code>主题配置文件</code>。</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"># Extensions## Plugins<span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>hexo<span class="token punctuation">.</span>io<span class="token regex">/plugins/</span>## Themes<span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>hexo<span class="token punctuation">.</span>io<span class="token regex">/themes/</span>theme<span class="token punctuation">:</span> next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>此时即可使用浏览器访问 <code>http://localhost:4000</code>，最终显示如下图。</li></ul><center style="font-size:14px;color:#C0C0C0;text-decoration:underline;">  <img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"       src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/更换主题样式03-主题页面.jpg" width="70%" height="70%" /><p>03-切换成功-主题页面</p></center><ul><li>若博客关联了GitHub，终端界面输入<code>hexo g -d</code>命令，next主题便成功部署到GitHub上了。</li></ul><blockquote><p>主题安装之后，需要进行一些基础属性的配置，这样才能更美观，更方便使用。</p></blockquote><h1 id="选择主题风格"><a href="#选择主题风格" class="headerlink" title="选择主题风格"></a>选择主题风格</h1><ul><li>Scheme 是 NexT 提供的一种特性，几乎所有的配置都可以 在 Scheme 之间共用。它提供了四种不同的外观风格：<ul><li>Muse</li><li>Mist</li><li>Pisces</li><li>Gemini</li></ul></li></ul><!-- more --><ul><li>如何配置<ul><li>打开主题配置文件，搜索 scheme 关键字。 你会看到有四行 scheme 的配置，将需启用的 scheme 前面注释<code>#</code>去除即可。</li><li>可以自己切换一下，看看线上效果。喜欢哪一种就选哪个。</li><li>下面我选中的是<code>Gemini</code>风格。</li></ul></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"># <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span># Scheme Settings# <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span># Schemes#scheme<span class="token punctuation">:</span> Muse#scheme<span class="token punctuation">:</span> Mist#scheme<span class="token punctuation">:</span> Piscesscheme<span class="token punctuation">:</span> Gemini<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="修改基本属性"><a href="#修改基本属性" class="headerlink" title="修改基本属性"></a>修改基本属性</h1><p>其次我们就要修改标题、副标题、描述、作者、语言这些基本属性了，这是博客页面最直观的一些个人信息的展示。</p><p>打开站点配置文件，找到<code>Site</code>，修改以下属性值</p><pre class="line-numbers language-javascript"><code class="language-javascript"># Sitetitle<span class="token punctuation">:</span> Hexosubtitle<span class="token punctuation">:</span> <span class="token string">''</span>description<span class="token punctuation">:</span> <span class="token string">''</span>keywords<span class="token punctuation">:</span>author<span class="token punctuation">:</span> John Doelanguage<span class="token punctuation">:</span> entimezone<span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>语言默认为<code>en</code>，中文简体为<code>zh-CN</code>，中文繁體为<code>zh-hk</code> 或者 <code>zh-tw</code></p><h1 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h1><h2 id="开启–网页显示菜单"><a href="#开启–网页显示菜单" class="headerlink" title="开启–网页显示菜单"></a>开启–网页显示菜单</h2><p>打开主题配置文件，找到<code>menu</code>。配置项如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript">menu<span class="token punctuation">:</span>  home<span class="token punctuation">:</span> <span class="token operator">/</span> <span class="token operator">||</span> fa fa<span class="token operator">-</span>home  categories<span class="token punctuation">:</span> <span class="token operator">/</span>categories<span class="token operator">/</span> <span class="token operator">||</span> fa fa<span class="token operator">-</span>th  tags<span class="token punctuation">:</span> <span class="token operator">/</span>tags<span class="token operator">/</span> <span class="token operator">||</span> fa fa<span class="token operator">-</span>tags  archives<span class="token punctuation">:</span> <span class="token operator">/</span>archives<span class="token operator">/</span> <span class="token operator">||</span> fa fa<span class="token operator">-</span>archive  about<span class="token punctuation">:</span> <span class="token operator">/</span>about<span class="token operator">/</span> <span class="token operator">||</span> fa fa<span class="token operator">-</span>user  #schedule<span class="token punctuation">:</span> <span class="token operator">/</span>schedule<span class="token operator">/</span> <span class="token operator">||</span> fa fa<span class="token operator">-</span>calendar  #sitemap<span class="token punctuation">:</span> <span class="token operator">/</span>sitemap<span class="token punctuation">.</span>xml <span class="token operator">||</span> fa fa<span class="token operator">-</span>sitemap  #commonweal<span class="token punctuation">:</span> <span class="token operator">/</span><span class="token number">404</span><span class="token operator">/</span> <span class="token operator">||</span> fa fa<span class="token operator">-</span>heartbeat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>同scheme一致，将需启用的菜单前面的注释 <code>#</code> 删去即可。也可以上下移动位置，改变网页上显示的上下位置。<br>如上，启用了home/about/tags/categories/archives</li></ul><blockquote><p>格式：</p><pre><code>item name: link || icon name</code></pre><p>item name 这个名称并不直接显示在页面上，它将用于<code>匹配图标以及翻译</code>。<br> <code>||</code> 之前的是目标链接，之后的是 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 图标的名字。<br>你可以再代码中找到图标引用的网址。</p></blockquote><h2 id="自定义菜单项的显示文本"><a href="#自定义菜单项的显示文本" class="headerlink" title="自定义菜单项的显示文本"></a>自定义菜单项的显示文本</h2><p>在上一步中设置的菜单的名称并不直接用于界面上的展示。</p><p>Hexo 在生成的时候将使用<code>item name</code>查找对应的<code>翻译文本</code>，并提取显示。<br>这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。打开<code>zh-CN.yml</code>，如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript">menu<span class="token punctuation">:</span>  home<span class="token punctuation">:</span> 首页  categories<span class="token punctuation">:</span> 分类  tags<span class="token punctuation">:</span> 标签  archives<span class="token punctuation">:</span> 归档  about<span class="token punctuation">:</span> 关于  search<span class="token punctuation">:</span> 搜索  schedule<span class="token punctuation">:</span> 日程表  sitemap<span class="token punctuation">:</span> 站点地图  commonweal<span class="token punctuation">:</span> 公益<span class="token number">404</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果不喜欢默认的，可以自定义修改这些汉字。</p><h3 id="开启–关闭图标"><a href="#开启–关闭图标" class="headerlink" title="开启–关闭图标"></a>开启–关闭图标</h3><p>menu下面有如下设置项：</p><pre class="line-numbers language-javascript"><code class="language-javascript">  # Enable <span class="token operator">/</span> Disable menu icons <span class="token operator">/</span> item badges<span class="token punctuation">.</span>menu_settings<span class="token punctuation">:</span>  icons<span class="token punctuation">:</span> <span class="token boolean">true</span>  badges<span class="token punctuation">:</span> <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>icons: true</code>控制显不显示图标。可以设置成 false 不显示图标。</p><blockquote><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（<code>没有设置</code>或者<code>无效的 Font Awesome 图标名字</code>） 的情况下，NexT 将会使用<code>?</code>作为图标。<br>不显示的话，将上面的代码复制到配置文件menu下面。</p></blockquote><h2 id="badges-设定菜单项的数额展示"><a href="#badges-设定菜单项的数额展示" class="headerlink" title="badges-设定菜单项的数额展示"></a>badges-设定菜单项的数额展示</h2><p>在上面的设置项下方，还有一个<code>badges</code>的设置，这个具体有什么效果呢，试一试。<br>修改为<code>true</code>。效果如下：</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E6%A0%B7%E5%BC%8F04-%E5%BE%BD%E7%AB%A0.jpg" alt="更换主题样式04-徽章"></p><p>在分类、标签、归档后面会显示对应的统计数额。我现在有1个分类、5个标签、5篇文章归档。</p><h2 id="如何添加菜单项"><a href="#如何添加菜单项" class="headerlink" title="如何添加菜单项"></a>如何添加菜单项</h2><p>以简体中文为例，若你需要添加一个菜单项，在比如 something。那么就需要：</p><ul><li>在主题配置文件的menu中增加：</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">something<span class="token punctuation">:</span> <span class="token operator">/</span>something<span class="token operator">/</span> <span class="token operator">||</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>修改简体中文对应的翻译文件 <code>languages/zh-CN.yml</code>，在 menu 字段下添加一项：</p><p>  something: 有料</p></li><li><p>配置图标</p></li></ul><p>在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 上找到一个图标，将相应的名称填入上面代码 <code>||</code>的后面，即可生效。比如名称为<code>coffee</code>的图标，上面的代码补充完整：</p><pre class="line-numbers language-javascript"><code class="language-javascript">something<span class="token punctuation">:</span> <span class="token operator">/</span>something<span class="token operator">/</span> <span class="token operator">||</span> fa fa<span class="token operator">-</span>coffee<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>效果如下：</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E6%A0%B7%E5%BC%8F05-%E6%B7%BB%E5%8A%A0%E8%8F%9C%E5%8D%95.jpg" alt="更换主题样式05-添加菜单"></p><blockquote><p>以下2020年5月14日更新</p></blockquote><h1 id="配置侧栏"><a href="#配置侧栏" class="headerlink" title="配置侧栏"></a>配置侧栏</h1><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于左侧位置。<br>打开主题配置文件，找到 <code>sidebar</code> 字段。<br>侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p><h2 id="左右位置"><a href="#左右位置" class="headerlink" title="左右位置"></a>左右位置</h2><pre class="line-numbers language-javascript"><code class="language-javascript">sidebar<span class="token punctuation">:</span>  # Sidebar Position<span class="token punctuation">.</span>  #position<span class="token punctuation">:</span> left  position<span class="token punctuation">:</span> right<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E6%A0%B7%E5%BC%8F06-%E5%8F%B3%E4%BE%A7%E4%BE%A7%E6%A0%8F.jpg" alt="更换主题样式06-右侧侧栏"></p><blockquote><p>放在右侧有点奇怪，根据喜好设置。</p></blockquote><h2 id="设置侧栏显示的时机"><a href="#设置侧栏显示的时机" class="headerlink" title="设置侧栏显示的时机"></a>设置侧栏显示的时机</h2><p>修改 <code>sidebar.display</code> 的值，支持的选项有：</p><p>post - 默认行为，在文章页面（拥有目录列表）时显示<br>always - 在所有页面中都显示<br>hide - 在所有页面中都隐藏（可以手动展开）<br>remove - 完全移除</p><p>代码如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript">  # Sidebar Display <span class="token punctuation">(</span>only <span class="token keyword">for</span> Muse <span class="token operator">|</span> Mist<span class="token punctuation">)</span><span class="token punctuation">,</span> available values<span class="token punctuation">:</span>  #  <span class="token operator">-</span> post    expand on posts automatically<span class="token punctuation">.</span> Default<span class="token punctuation">.</span>  #  <span class="token operator">-</span> always  expand <span class="token keyword">for</span> all pages automatically<span class="token punctuation">.</span>  #  <span class="token operator">-</span> hide    expand only when click on the sidebar toggle icon<span class="token punctuation">.</span>  #  <span class="token operator">-</span> remove  totally remove sidebar including sidebar toggle<span class="token punctuation">.</span>  display<span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>最后别忘了hexo g -d命令，部署到github上。</p></blockquote><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT GitHub项目页</a></p><p><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/INSTALLATION.md" target="_blank" rel="noopener">NexT GitHub——detailed installation instructions</a></p><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT使用文档</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> NexT </tag>
            
            <tag> 博客教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建（1）：Mac端使用Hexo+GitHub Pages搭建免费个人博客</title>
      <link href="/2020/05/04/hexo-bo-ke-da-jian-1-mac-duan-shi-yong-hexo-github-pages-da-jian-mian-fei-ge-ren-bo-ke/"/>
      <url>/2020/05/04/hexo-bo-ke-da-jian-1-mac-duan-shi-yong-hexo-github-pages-da-jian-mian-fei-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自己创建博客的过程整理，供日后查阅。本人Mac端，使用Hexo和GitHub搭建的博客。一步一步操作就可以。</p><p>废话不多说了，下面开始。</p></blockquote><a id="more"></a><h1 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h1><ul><li><p>选择哪种方案搭建博客</p><ul><li>参考这篇文章，<a href="http://arrfu.com/blog-build-jekyll-hexo-wordpress.html" target="_blank" rel="noopener">免费搭建个人博客的几种高效方案</a>，最终选定<code>+hexo+Github</code>的方式。</li></ul></li><li><p>关于Github Page</p><ul><li>Github Page 是 Github 提供的一种免费的静态网页托管服务，可以用来托管博客、项目官网等静态网页。支持 Jekyll、Hugo、Hexo 编译静态资源。</li></ul></li><li><p>关于Hexo</p><ul><li>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</li></ul></li></ul><h1 id="环境配置：安装Node-js和git"><a href="#环境配置：安装Node-js和git" class="headerlink" title="环境配置：安装Node.js和git"></a>环境配置：安装Node.js和git</h1><h2 id="下载安装Node-js"><a href="#下载安装Node-js" class="headerlink" title="下载安装Node.js"></a>下载安装Node.js</h2><p>Hexo 是基于 Node.js 驱动的一款博客框架，所以需安装node。</p><p>前往 <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js官网</a> 下载软件安装。</p><h2 id="下载安装git"><a href="#下载安装git" class="headerlink" title="下载安装git"></a>下载安装git</h2><p>前往 <a href="https://git-scm.com/" target="_blank" rel="noopener">git官网</a> 下载软件安装。</p><h2 id="检查是否安装"><a href="#检查是否安装" class="headerlink" title="检查是否安装"></a>检查是否安装</h2><p>在命令行中输入相应命令验证是否成功，如果成功会有相应的版本号。</p><pre class="line-numbers language-jsx"><code class="language-jsx">node <span class="token operator">-</span>vgit versionnpm <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A201%E9%AA%8C%E8%AF%81%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85node%E3%80%81git.jpg" alt="01验证是否安装node、git"></p><h1 id="使用npm安装Hexo"><a href="#使用npm安装Hexo" class="headerlink" title="使用npm安装Hexo"></a>使用npm安装Hexo</h1><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>终端中输入命令</p><pre class="line-numbers language-python"><code class="language-python">sudo npm install <span class="token operator">-</span>g hexo<span class="token operator">-</span>cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>hexo-cli：CLI就是命令行接口的意思，Command Line Interface。会安装Hexo和hexo的一些命令，也就是说可以使用命令行操作hexo</p></blockquote><p>输入管理员密码（Mac登录密码）即开始安装</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A203%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.jpg" alt="02安装成功"></p><blockquote><p>注意坑：Hexo官网上的安装命令是<code>npm install -g hexo-cli</code>，安装时不要忘记前面加上<code>sudo</code>，否则会因为权限问题报错。可能的错误如下:</p></blockquote><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A202%E6%8A%A5%E9%94%9901.jpg" alt="02报错01"></p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A202%E6%8A%A5%E9%94%9902.jpg" alt="Hexo+GitHub搭建博客02报错02"></p><blockquote><p>根据报错信息的最后一行，使用<code>sudo</code>命令root执行即可。</p></blockquote><h2 id="本地初始化操作"><a href="#本地初始化操作" class="headerlink" title="本地初始化操作"></a>本地初始化操作</h2><ul><li>执行hexo init命令，复制文件到本地</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">hexo init My_Blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A204%E6%9C%AC%E5%9C%B0%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%90%E5%8A%9F.jpg" alt="Hexo+GitHub搭建博客04本地初始化成功"></p><p>如果要指定上层文件夹（默认user）位置，cd 到你想安装的目录。</p><blockquote><p>CD方法：<br>输入<code>cd</code>+<code>空格</code><br>将想要定位的文件夹拖进终端，将会自动填充文件路径，再点击回车</p></blockquote><ul><li>会在user下建立一个<code>My_Blog</code>文件夹，这个文件夹名称按照自己喜好在命令行里自定义。hexo会复制对应的文件到本地My_Blog文件夹下。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A205%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6.jpg" alt="Hexo+GitHub搭建博客05本地文件"></p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">-</span> 安装完的目录    <span class="token operator">-</span> <span class="token punctuation">.</span>    ├── node_modules    ├── scaffolds # 模版文件夹    ├── source  # 资源文件夹，除 _posts 文件，其他以下划线_开头的文件或者文件夹不会被编译打包到<span class="token keyword">public</span>文件夹    <span class="token operator">|</span>   └── _posts # 文章Markdowm文件     └── themes  # 主题文件夹    <span class="token operator">|</span>   └── landscape  # 默认的博客主题    ├── <span class="token keyword">package</span><span class="token operator">-</span>lock<span class="token punctuation">.</span>json    ├── <span class="token keyword">package</span><span class="token punctuation">.</span>json    ├── _config<span class="token punctuation">.</span>yml # 网站的配置信息，您可以在此配置大部分的参数。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这些文件哪儿来的。这就是要先安装git的原因，hexo的github有个叫hexo-starter的仓库，这里面有所有的hexo包文件</p></blockquote><h2 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h2><p>cd到“My_Blog”文件夹下，执行命令</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A206CD.jpg" alt="Hexo+GitHub搭建博客06CD"></p><pre class="line-numbers language-javascript"><code class="language-javascript">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A207%E5%AE%89%E8%A3%85npm.jpg" alt="Hexo+GitHub搭建博客07安装npm"></p><h2 id="执行下述命令生成本地网页文件并开启服务器："><a href="#执行下述命令生成本地网页文件并开启服务器：" class="headerlink" title="执行下述命令生成本地网页文件并开启服务器："></a>执行下述命令生成本地网页文件并开启服务器：</h2><blockquote><p><code>hexo g</code> 或 <code>hexo generate</code>  生成静态文件<br><code>hexo s</code> 或者 <code>hexo server</code>    在服务器上运行</p></blockquote><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A208%E7%94%9F%E6%88%90%E7%BD%91%E9%A1%B5.jpg" alt="Hexo+GitHub搭建博客08生成网页"></p><p>此时，浏览器中打开网址 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，如果没有问题，就能看到如下页面：</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A209%E9%BB%98%E8%AE%A4%E9%A1%B5%E9%9D%A2.jpg" alt="Hexo+GitHub搭建博客09默认页面"></p><blockquote><p>上图中是Hexo默认主题，后续可以修改，参考我的博客文章：</p></blockquote><h2 id="初次写作文章"><a href="#初次写作文章" class="headerlink" title="初次写作文章"></a>初次写作文章</h2><p><code>control+C</code>,暂时关闭服务器，回到命令行输入界面</p><p>输入命令行</p><pre class="line-numbers language-javascript"><code class="language-javascript">hexo <span class="token keyword">new</span> “My First Post"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A210%E5%86%99%E4%BD%9C%E6%96%87%E7%AB%A0hexo_new.jpg" alt="Hexo+GitHub搭建博客10写作文章hexo new"></p><p><code>source/_posts/</code>的本地文件夹下会生成<code>My-First-Post.md</code>文件，可以打开编辑保存。</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A211%E7%BC%96%E8%BE%91md.jpg" alt="Hexo+GitHub搭建博客11编辑md"></p><p>该md文件在自动生成时会带有一些属性：</p><blockquote><p>title: 定义了博文的标题<br>date: 定义了创作博文的时间<br>tags: 定义了博文的标签<br>除了这个三个属性以外我们还可以扩展一些属性：<br>update: 定义了最后修改的时间<br>comments: 定义能否评论此博文(默认为true)<br>categories: 定义了博文的分类</p><p>网页效果如下。有标题</p></blockquote><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A212%E7%BD%91%E9%A1%B5%E6%95%88%E6%9E%9C.jpg" alt="Hexo+GitHub搭建博客12网页效果"></p><h1 id="本地博客关联部署到GitHub上"><a href="#本地博客关联部署到GitHub上" class="headerlink" title="本地博客关联部署到GitHub上"></a>本地博客关联部署到GitHub上</h1><h2 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h2><h3 id="注册登录GitHub"><a href="#注册登录GitHub" class="headerlink" title="注册登录GitHub"></a>注册登录GitHub</h3><p>点击打开 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，注册登录</p><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h3><p>用于存放构建后的网站文件。</p><p>点击右上角加号，选择New repository，或者直接点击 <a href="https://github.com/new" target="_blank" rel="noopener">仓库新建页</a> 创建一个公开仓库</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A213%E5%BC%80%E5%A7%8B%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.jpg" alt="Hexo+GitHub搭建博客13开始创建仓库"></p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A214%E5%88%9B%E5%BB%BA%E9%A1%B5.jpg" alt="Hexo+GitHub搭建博客14创建页"></p><ul><li>Repository name填写<code>用户名.github.io</code></li></ul><blockquote><p>注：Github 仅能使用一个同名仓库的代码托管一个静态站点，所以仓库名必须是“用户名.github.io”，其他名称无效。<br>用户名即setting → Account中的username</p></blockquote><ul><li>选择public，勾选初始化readme</li><li>创建成功后，以后你的博客所有代码都可以放在这个仓库里。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A215%E5%88%9B%E5%BB%BA%E6%88%90%E5%8A%9F.jpg" alt="Hexo+GitHub搭建博客15创建成功"></p><h2 id="本地博客代码上传GitHub"><a href="#本地博客代码上传GitHub" class="headerlink" title="本地博客代码上传GitHub"></a>本地博客代码上传GitHub</h2><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>编辑自己创建的本地博客文件夹中的_config.yml中的deploy节点</p><p>终端cd到<code>My_Blog</code>文件夹下，使用命令打开<code>_config.yml</code>文件。</p><pre class="line-numbers language-javascript"><code class="language-javascript">vim _config<span class="token punctuation">.</span>yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改配置如下：</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A216%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE_.jpg" alt="Hexo+GitHub搭建博客16修改配置 "></p><blockquote><p>我是使用sublime编辑保存的，或者用其他文本编辑器也可以。</p></blockquote><p>拉到文件末尾，填上如下配置。</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token template-string"><span class="token string">`deploy:type: gitrepository: https://github.com/Pamarus/Pamarus.github.io.gitbranch: master`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token template-string"><span class="token string">`deploy:type: gitrepo: git@github.com:Pamarus/Pamarus.github.io.gitbranch: master`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：repo这一行，若没有配置SSH Key，使用https形式的地址，配置了使用下面那一种。注意type、repository、branch后均有空格。</p></blockquote><h3 id="安装部署插件-hexo-deployer-git"><a href="#安装部署插件-hexo-deployer-git" class="headerlink" title="安装部署插件 hexo-deployer-git"></a>安装部署插件 hexo-deployer-git</h3><pre class="line-numbers language-javascript"><code class="language-javascript">npm install hexo<span class="token operator">-</span>deployer<span class="token operator">-</span>git <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A217%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6_hexo-deployer-git.jpg" alt="Hexo+GitHub搭建博客17部署插件 hexo-deployer-git"></p><blockquote><p>若不执行这个命令安装部署插件，执行hexo d就会报错</p><pre><code>ERROR Deployer not found: git。</code></pre></blockquote><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A219hexo_d%E6%8A%A5%E9%94%99.jpg" alt="Hexo+GitHub搭建博客19hexo d报错"></p><h3 id="生成静态文件并上传到服务器"><a href="#生成静态文件并上传到服务器" class="headerlink" title="生成静态文件并上传到服务器"></a>生成静态文件并上传到服务器</h3><p>使用命令：（cd到博客的对应文件夹路径下）</p><blockquote><p><code>hexo g</code> 或 <code>hexo generate</code>  生成静态文件<br><code>hexo d</code> 或 <code>hexo deploy</code>      将网站部署到服务器上</p><p>或 <code>hexo g -d</code></p></blockquote><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A218hexo_g%E7%94%9F%E6%88%90%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2.jpg" alt="Hexo+GitHub搭建博客18hexo g生成静态页面"></p><blockquote><p>若执行<code>hexo g</code>出错则执行<code>npm install hexo --save</code>，若执行<code>hexo d</code>出错（即2.2可能出现的错误）则执行<code>npm install hexo-deployer-git --save</code>。错误修正后再次执行<code>hexo g</code>和<code>hexo d</code>上传到服务器。</p></blockquote><h3 id="填写username和password"><a href="#填写username和password" class="headerlink" title="填写username和password"></a>填写username和password</h3><p>之后终端会显示下列代码，依序输入用户名，点击enter，输入密码，enter即可。</p><pre class="line-numbers language-javascript"><code class="language-javascript">Username <span class="token keyword">for</span> <span class="token string">'[https://github.com](https://github.com/)'</span><span class="token punctuation">:</span>Password <span class="token keyword">for</span> <span class="token string">'[https://Pamarus@github.com](https://Pamarus@github.com/)'</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A220hexo_d%E5%90%8E%E5%A1%AB%E5%86%99username.jpg" alt="Hexo+GitHub搭建博客20hexo d后填写username"></p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A221%E5%A1%AB%E5%86%99%E5%AF%86%E7%A0%81.jpg" alt="Hexo+GitHub搭建博客21填写密码"></p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A222%E5%AE%8C%E6%88%90%E9%83%A8%E7%BD%B2.jpg" alt="Hexo+GitHub搭建博客22完成部署"></p><p>deploy成功后，便可通过 <a href="https://pamarus.github.io" target="_blank" rel="noopener">https://pamarus.github.io</a> （你的GitHun博客域名）访问博客，看到的内容和 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 相同了。如下图（浏览器中域名）</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A223%E6%89%93%E5%BC%80github%E5%9F%9F%E5%90%8D%E7%BD%91%E7%AB%99.jpg" alt="Hexo+GitHub搭建博客23打开github域名网站"></p><h1 id="博客写作"><a href="#博客写作" class="headerlink" title="博客写作"></a>博客写作</h1><ul><li>终端内cd到博客目录，依次输入命令：</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">hexo <span class="token keyword">new</span> <span class="token string">"My Second Post"</span>hexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A224%E5%86%99%E5%8D%9A%E5%AE%A2.jpg" alt="Hexo+GitHub搭建博客24写博客"></p><ul><li>刷新网页，看见第二篇文章了。</li></ul><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A225%E5%88%B7%E6%96%B0%E7%94%9F%E6%88%90.jpg" alt="Hexo+GitHub搭建博客25刷新生成"></p><ul><li>也可以在本地<code>source/_posts/</code>的文件夹下自己创建md文件。再执行<code>hexo g</code>和<code>hexo d</code>即可。</li></ul><blockquote><p>此时本地博客内容便已关联到GitHub之中，本地博客改变之后，通过<code>hexo g</code>和<code>hexo d</code>便可更新到GitHub之中，通过 <a href="https://pamarus.github.io" target="_blank" rel="noopener">https://pamarus.github.io</a> 访问便可看到更新内容。</p></blockquote><blockquote><p>部署前最好能先执行一下 hexo clean 命令，清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p></blockquote><h1 id="配置-SSH-key"><a href="#配置-SSH-key" class="headerlink" title="配置 SSH key"></a>配置 SSH key</h1><blockquote><p>这一步不是必须的，所以我放在后面了。配置SSH Key的话之后每次更新博客就不用都输入用户名和密码，可以方便一些。</p></blockquote><blockquote><p>为什么要配置这个呢？因为提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，也很麻烦，所以我们使用ssh key来解决本地和服务器的连接问题。</p></blockquote><h2 id="生成SSH-key"><a href="#生成SSH-key" class="headerlink" title="生成SSH key"></a>生成SSH key</h2><ul><li>终端中输入命令：</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span>C <span class="token string">"你的GitHub注册邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A227%E7%94%9F%E6%88%90key.jpg" alt="Hexo+GitHub搭建博客27生成key"></p><ul><li>按下enter，让你输入文件名，直接enter会创建使用默认文件名的文件（推荐使用默认文件名），然后会提示你输入两次密码，可以为空。两次enter之后生成key</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">Your identification has been saved <span class="token keyword">in</span> <span class="token operator">/</span>Users<span class="token regex">/user/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsa<span class="token punctuation">.</span>Your <span class="token keyword">public</span> key has been saved <span class="token keyword">in</span> <span class="token operator">/</span>Users<span class="token regex">/user/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsa<span class="token punctuation">.</span>pub<span class="token punctuation">.</span>The key fingerprint is<span class="token punctuation">:</span> <span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span>The Key's randomart image is<span class="token punctuation">:</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="找到key"><a href="#找到key" class="headerlink" title="找到key"></a>找到key</h2><p>按照上面生成的，mac下前往文件夹<code>/Users/user/.ssh</code></p><blockquote><p>如何前往<br>Finder中前往 -&gt; 前往文件夹… -&gt; 填入<code>/Users/user/.ssh</code> -&gt; enter。打开文件夹后就可以看到<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件</p></blockquote><p>打开<code>id_rsa.pub</code>文件，ssh key便在这个文件里</p><h2 id="Github-上添加刚刚生成的ssh-key"><a href="#Github-上添加刚刚生成的ssh-key" class="headerlink" title="Github 上添加刚刚生成的ssh key"></a>Github 上添加刚刚生成的ssh key</h2><p>将key复制到GitHub的Add ssh key中。路径：<code>GitHub -&gt; Setting -&gt; SSH keys -&gt; add SSH key</code>。</p><p>Title里填写任意标题，将复制的内容粘贴到key中，点击Add key完成添加。</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A228github%E6%B7%BB%E5%8A%A0key.jpg" alt="Hexo+GitHub搭建博客28github添加key"></p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A229%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2.jpg" alt="Hexo+GitHub搭建博客29添加页面"></p><h2 id="检验SSH-Key是否配置成功"><a href="#检验SSH-Key是否配置成功" class="headerlink" title="检验SSH Key是否配置成功"></a>检验SSH Key是否配置成功</h2><p>终端输入命令：</p><pre class="line-numbers language-javascript"><code class="language-javascript">ssh <span class="token operator">-</span>T git@github<span class="token punctuation">.</span>com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现：</p><pre class="line-numbers language-javascript"><code class="language-javascript">Are you sure you want to <span class="token keyword">continue</span> connecting <span class="token punctuation">(</span>yes<span class="token operator">/</span>no<span class="token punctuation">)</span><span class="token operator">?</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入yes，enter返回：</p><pre class="line-numbers language-javascript"><code class="language-javascript">Hi Pamarus<span class="token operator">!</span> You've successfully authenticated<span class="token punctuation">,</span> but GitHub does not provide shell access<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就说明你的SSHKey配置成功了。</p><p><img src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A231%E6%A3%80%E6%B5%8B.jpg" alt="Hexo+GitHub搭建博客31检测"></p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p><a href="https://www.jianshu.com/p/cbf8ba8af532" target="_blank" rel="noopener">Mac+Hexo+GitHub博客搭建教程</a></p><p><a href="https://segmentfault.com/a/1190000017986794#item-14" target="_blank" rel="noopener">超详细Hexo+Github Page搭建技术博客教程【持续更新】</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> GitHub </tag>
            
            <tag> 博客教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown（1）：基础语法学习及快速入门</title>
      <link href="/2020/05/03/markdown-1-ji-chu-yu-fa-xue-xi-ji-kuai-su-ru-men/"/>
      <url>/2020/05/03/markdown-1-ji-chu-yu-fa-xue-xi-ji-kuai-su-ru-men/</url>
      
        <content type="html"><![CDATA[<blockquote><p>零到1新手，花了两天时间，4月30日把自己的第一个博客搭建成功。5.1放假除了上课做作业，空闲时间学习了博客主题配置、GitHub图床、Markdown语法、小书匠Markdown一些操作等基础知识。陆续整合到博客上，方便以后查阅，也作为最初的文章。</p></blockquote><a id="more"></a><h1 id="插入标题"><a href="#插入标题" class="headerlink" title="插入标题"></a>插入标题</h1><p>Markdown 支持两种标题的语法，<code>类Setext</code> 和 <code>类atx</code> 形式。</p><h2 id="类Setext形式"><a href="#类Setext形式" class="headerlink" title="类Setext形式"></a>类Setext形式</h2><p>用底线的形式，用 <code>=</code> 表示最高阶标题，用 <code>-</code> 表示第二阶标题。大于等于1个就可以生效。如下图</p><center style="font-size:14px;color:#C0C0C0;text-decoration:underline;"><img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/MD语法学习01-类Setext样式.jpg" width="100%" height="100%" /><p>01-类Setext样式</p></center><h2 id="类Atx形式"><a href="#类Atx形式" class="headerlink" title="类Atx形式"></a>类Atx形式</h2><p>在行首插入1到6个 <code>#</code> ，对应到标题1到6阶。如下图：</p><blockquote><p><code>#</code>后面要写空格，否则不生效。</p></blockquote><center style="font-size:14px;color:#C0C0C0;text-decoration:underline;"><img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);"src="https://raw.githubusercontent.com/Pamarus/Images/master/2020/05/MD语法学习02-类Atx样式.jpg" width="100%" height="100%" /><p>02-类Atx样式</p></center><h1 id="设置粗体文字"><a href="#设置粗体文字" class="headerlink" title="设置粗体文字"></a>设置粗体文字</h1><p>对需要加粗的文字使用两个 <code>*</code> 或者 <code>_</code> 符号包裹，系统就会转换成加粗显示效果。</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token operator">**</span>双星号加粗<span class="token operator">**</span>__双下划线加粗__<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><p><strong>双星号加粗</strong><br><strong>双下划线加粗</strong></p><p>可以随便用你喜欢的样式，唯一的限制是，用什么符号开启标签，就要用什么符号结束。</p><p>注：星号与文字间不能有空格：</p><p><em><em> 前面有空格，不生效<em><em>  </em></em>后面有空格，不生效 </em></em></p><h1 id="插入引用"><a href="#插入引用" class="headerlink" title="插入引用"></a>插入引用</h1><p>引用一段文字或语法,在每行的最前面加上 <code>&gt;</code> 即可：</p><h2 id="单行引用"><a href="#单行引用" class="headerlink" title="单行引用"></a>单行引用</h2><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">></span> 单行引用文字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><blockquote><p>单行引用文字</p></blockquote><h2 id="多行引用"><a href="#多行引用" class="headerlink" title="多行引用"></a>多行引用</h2><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">></span> 引用文字<span class="token operator">></span> 引用文字<span class="token operator">></span> 引用文字<span class="token operator">></span> <span class="token operator">></span> 引用文字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>显示效果：</strong></p><blockquote><p>引用文字<br>引用文字<br>引用文字</p><p>引用文字</p></blockquote><h2 id="段落省略"><a href="#段落省略" class="headerlink" title="段落省略"></a>段落省略</h2><p>多行引用可以只在第一行里使用 <code>&gt;</code> 符号，只要是在同一个段落内，系统都会把该段落处理成引用。</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">></span> 引用文字引用文字引用文字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><blockquote><p>引用文字<br>引用文字<br>引用文字</p></blockquote><h2 id="多级引用"><a href="#多级引用" class="headerlink" title="多级引用"></a>多级引用</h2><p>连续书写多个 <code>&gt;</code>符号，就可以实现多级引用。</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">></span> 层级<span class="token number">1</span><span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> 层级<span class="token number">2</span><span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> 层级<span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><blockquote><p>层级1</p><blockquote><p>层级2</p><blockquote><p>层级3</p></blockquote></blockquote></blockquote><h2 id="引用其他语法"><a href="#引用其他语法" class="headerlink" title="引用其他语法"></a>引用其他语法</h2><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">.</span>引用列表项，第一行列表项。<span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">.</span>引用列表项，是第二行列表项。<span class="token operator">></span> <span class="token operator">></span> 引用代码区块：<span class="token operator">></span> <span class="token operator">></span>     <span class="token keyword">return</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token string">"echo $input | $markdown_script"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>显示效果：</strong></p><blockquote><p>1.引用列表项，第一行列表项。<br>2.引用列表项，是第二行列表项。</p><p>引用代码区块：</p><pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre></blockquote><h1 id="引用代码"><a href="#引用代码" class="headerlink" title="引用代码"></a>引用代码</h1><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><h3 id="使用符号"><a href="#使用符号" class="headerlink" title="使用符号`"></a>使用符号<code>`</code></h3><p>在一个段落内显示一小段代码，使用 ` 符号即可。</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">这是一个段落内的 <span class="token template-string"><span class="token string">`one line of code`</span></span> 是的，就这样用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><p>这是一个段落内的 <code>one line of code</code>，是的，就这样用</p><h3 id="行内代码显示"><a href="#行内代码显示" class="headerlink" title="行内代码显示`"></a>行内代码显示<code>`</code></h3><p>如何在行内代码里显示<code>`</code>符号， 可以使用连续书写两个 （`） 符号包裹（`），（`）左右有空格。</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">这是一个段落内的 <span class="token template-string"><span class="token string">`one line of code`</span></span> 是的，我要显示 <span class="token template-string"><span class="token string">``</span></span> <span class="token template-string"><span class="token string">` `</span></span>` 符号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><p>这是一个段落内的 <code>one line of code</code> 是的，我要显示 <code>`</code> 符号， </p><h2 id="区块代码"><a href="#区块代码" class="headerlink" title="区块代码"></a>区块代码</h2><h3 id="缩进4个空格"><a href="#缩进4个空格" class="headerlink" title="缩进4个空格"></a>缩进4个空格</h3><p>在一整块范围内显示一个代码片段。缩进 4 个空格即可。</p><ul><li><strong>示例：</strong></li></ul><blockquote><pre><code> var x = 1;  var y = 2;  var z = 3; </code></pre></blockquote><ul><li><p><strong>显示效果：</strong></p><p>  var x = 1;<br>  var y = 2;<br>  var z = 3; </p></li></ul><h3 id="GFM风格代码块语法"><a href="#GFM风格代码块语法" class="headerlink" title="GFM风格代码块语法"></a>GFM风格代码块语法</h3><p>连续书写三个 <code>`</code> 或者<code>~</code>包裹代码，并可以高亮显示部分代码。通过 GFM 风格显示的代码块，不再需要像普通代码块那样，每行都要空4个空格的要求。<br>同时支持高亮语言。在 <code>`</code> 后输入语言就可以生效。</p><ul><li><strong>示例：</strong></li></ul><blockquote><p>` ` `<br>var x = 1;<br>var y = 2;<br>var z = 3;<br>` ` `</p></blockquote><blockquote><p>~ ~ ~javascript<br>var x = 1;<br>var y = 2;<br>var z = 3;<br>~ ~ ~</p></blockquote><ul><li><strong>显示效果：</strong></li></ul><pre><code>var x = 1; var y = 2; var z = 3; </code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token keyword">var</span> z <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h1><p>Markdown 支持两种形式的链接语法： 内联式和引用式两种形式。</p><h2 id="内联式"><a href="#内联式" class="headerlink" title="内联式"></a>内联式</h2><p>中括号内为显示文本，后面紧接一对圆括号. 圆括号里面放所需的 URL 链接,</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">[</span><span class="token number">01</span><span class="token punctuation">.</span>Markdown语法说明<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>appinncom<span class="token operator">/</span>Markdown<span class="token operator">-</span>Syntax<span class="token operator">-</span>CN<span class="token operator">/</span>blob<span class="token operator">/</span>master<span class="token operator">/</span>syntax<span class="token punctuation">.</span>md<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><p><a href="https://github.com/appinncom/Markdown-Syntax-CN/blob/master/syntax.md" target="_blank" rel="noopener">01.Markdown语法说明</a></p><h2 id="引用式"><a href="#引用式" class="headerlink" title="引用式"></a>引用式</h2><ul><li><p>第一行：<br>引用式链接使用连续两个中括号，第一个中括号放显示文本，第二个中括号里面要填入用以辨识链接的标记。<br>标记可以有字母、数字、空白和标点符号</p></li><li><p>第二行：定义链接</p><ul><li>需要单独占一行。格式是：<br>（1）中括号中包含标记文本 (可以用三个以上的空白符来添加缩进);<br>（2）接着是冒号;<br>（3）接着是链接的 URL;<br>（4）接着是可选的标题, 可以用单引号, 双引号, 或者圆括号包围。</li></ul></li><li><p>链接的定义可以放在文件中的任何一个地方，比较常见的做法就是直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p></li><li><p><strong>示例：</strong></p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">我们可以在 <span class="token punctuation">[</span><span class="token number">02</span><span class="token punctuation">.</span>Markdown中文文档<span class="token punctuation">]</span><span class="token punctuation">[</span>link1<span class="token punctuation">]</span>这个网站查看MD语法样式。<span class="token punctuation">[</span>link1<span class="token punctuation">]</span><span class="token punctuation">:</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>markdown<span class="token operator">-</span>zh<span class="token punctuation">.</span>readthedocs<span class="token punctuation">.</span>io<span class="token operator">/</span>en<span class="token regex">/latest/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><p>我们可以在 <a href="https://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="noopener">02.Markdown中文文档</a> 这个网站查看MD语法样式。</p><h2 id="添加title"><a href="#添加title" class="headerlink" title="添加title"></a>添加title</h2><h3 id="内联式title"><a href="#内联式title" class="headerlink" title="内联式title"></a>内联式title</h3><p>在圆括号内链接后，双引号添加title文本，中间有空格。</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">我们可以在 <span class="token punctuation">[</span><span class="token number">03</span><span class="token punctuation">.</span>小书匠语法说明<span class="token punctuation">]</span><span class="token punctuation">(</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>soft<span class="token punctuation">.</span>xiaoshujiang<span class="token punctuation">.</span>com<span class="token operator">/</span>docs<span class="token operator">/</span>grammar<span class="token operator">/</span>common<span class="token regex">/italic/</span> <span class="token string">"我使用小书匠编辑器"</span><span class="token punctuation">)</span> 这个网站查看MD语法样式。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><p>我们可以在 <a href="http://soft.xiaoshujiang.com/docs/grammar/common/italic/" target="_blank" rel="noopener" title="我使用小书匠编辑器">03.小书匠语法说明</a> 这个网站查看MD语法样式。</p><h3 id="引用式title"><a href="#引用式title" class="headerlink" title="引用式title"></a>引用式title</h3><p>在定义的链接后，用单引号, 双引号, 或者圆括号包围title。三种样式效果一致。</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">我们可以在 <span class="token punctuation">[</span><span class="token number">02</span><span class="token punctuation">.</span>Markdown中文文档<span class="token punctuation">]</span><span class="token punctuation">[</span>link2<span class="token punctuation">]</span> 这个网站查看MD语法样式。<span class="token punctuation">[</span>link2<span class="token punctuation">]</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>markdown<span class="token operator">-</span>zh<span class="token punctuation">.</span>readthedocs<span class="token punctuation">.</span>io<span class="token operator">/</span>en<span class="token regex">/latest/</span> <span class="token string">"Markdown语法"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><p>我们可以在 <a href="https://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="noopener" title="Markdown语法">02.Markdown中文文档</a> 这个网站查看MD语法样式。</p><h1 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h1><p>在超链接的写法前加一个<code>!</code>，就是引用图片的方法</p><p>插入图片有个问题，题注无法显示，图片大小也无法控制。单独一篇文章中解决这个问题。参考：</p><h1 id="写语法符号–反斜线"><a href="#写语法符号–反斜线" class="headerlink" title="写语法符号–反斜线"></a>写语法符号–反斜线</h1><p>利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <code>&lt;em&gt;</code> 标签），你可以在星号的前面加上反斜杠：<br>(em标签需要加上反引号包围，防止格式化文本）</p><ul><li><strong>示例：</strong></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">\<span class="token operator">*</span>文字星号\<span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>显示效果：</strong></li></ul><p>*文字星号*</p><ul><li>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">\   反斜线`   反引号<span class="token operator">*</span>   星号_   底线<span class="token punctuation">{</span><span class="token punctuation">}</span>  花括号<span class="token punctuation">[</span><span class="token punctuation">]</span>  方括号<span class="token punctuation">(</span><span class="token punctuation">)</span>  括弧#   井字号<span class="token operator">+</span>   加号<span class="token operator">-</span>   减号<span class="token punctuation">.</span>   英文句点<span class="token operator">!</span>   惊叹号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo_Blog </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/contact/index.html"/>
      <url>/contact/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>404</title>
      <link href="/404/index.html"/>
      <url>/404/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
